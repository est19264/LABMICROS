

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Apr 18 22:22:57 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213                           
   214                           	psect	idataBANK0
   215  01E4                     __pidataBANK0:
   216                           
   217                           ;initializer for _tabla7seg
   218  01E4  343F               	retlw	63
   219  01E5  3406               	retlw	6
   220  01E6  345B               	retlw	91
   221  01E7  344F               	retlw	79
   222  01E8  3466               	retlw	102
   223  01E9  346D               	retlw	109
   224  01EA  347D               	retlw	125
   225  01EB  3407               	retlw	7
   226  01EC  347F               	retlw	127
   227  01ED  346F               	retlw	111
   228                           
   229                           	psect	nvCOMMON
   230  0077                     __pnvCOMMON:
   231  0077                     _residuo:
   232  0077                     	ds	1
   233  0078                     _centena:
   234  0078                     	ds	1
   235                           
   236                           	psect	nvBANK0
   237  0032                     __pnvBANK0:
   238  0032                     _unidad:
   239  0032                     	ds	1
   240  0033                     _decena:
   241  0033                     	ds	1
   242  0009                     _PORTE	set	9
   243  0007                     _PORTC	set	7
   244  0006                     _PORTB	set	6
   245  0005                     _PORTA	set	5
   246  0006                     _PORTBbits	set	6
   247  0001                     _TMR0	set	1
   248  000B                     _INTCONbits	set	11
   249  0008                     _PORTD	set	8
   250  0009                     _PORTEbits	set	9
   251  0058                     _RBIF	set	88
   252  005A                     _T0IF	set	90
   253  0096                     _IOCBbits	set	150
   254  0095                     _WPUB	set	149
   255  0089                     _TRISE	set	137
   256  0088                     _TRISD	set	136
   257  0087                     _TRISC	set	135
   258  0086                     _TRISBbits	set	134
   259  0085                     _TRISA	set	133
   260  0081                     _OPTION_REGbits	set	129
   261  008F                     _OSCCONbits	set	143
   262  0189                     _ANSELH	set	393
   263  0188                     _ANSEL	set	392
   264                           
   265                           	psect	cinit
   266  0011                     start_initialization:	
   267                           ; #config settings
   268                           
   269  0011                     __initialization:
   270                           
   271                           ; Initialize objects allocated to BANK0
   272  0011  1383               	bcf	3,7	;select IRP bank0
   273  0012  302A               	movlw	low (__pdataBANK0+10)
   274  0013  00FD               	movwf	btemp+-1
   275  0014  3001               	movlw	high __pidataBANK0
   276  0015  00FE               	movwf	btemp
   277  0016  30E4               	movlw	low __pidataBANK0
   278  0017  00FF               	movwf	btemp+1
   279  0018  3020               	movlw	low __pdataBANK0
   280  0019  0084               	movwf	4
   281  001A  120A  118A  21C7  120A  118A  	fcall	init_ram0
   282                           
   283                           ; Clear objects allocated to COMMON
   284  001F  01F9               	clrf	__pbssCOMMON& (0+127)
   285  0020  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   286  0021                     end_of_initialization:	
   287                           ;End of C runtime variable initialization code
   288                           
   289  0021                     __end_of__initialization:
   290  0021  0183               	clrf	3
   291  0022  120A  118A  29D6   	ljmp	_main	;jump to C main() function
   292                           
   293                           	psect	bssCOMMON
   294  0079                     __pbssCOMMON:
   295  0079                     _multiplex:
   296  0079                     	ds	2
   297                           
   298                           	psect	dataBANK0
   299  0020                     __pdataBANK0:
   300  0020                     _tabla7seg:
   301  0020                     	ds	10
   302                           
   303                           	psect	inittext
   304  01C3                     init_fetch0:	
   305                           ;	Called with low address in FSR and high address in W
   306                           
   307  01C3  087E               	movf	btemp,w
   308  01C4  008A               	movwf	10
   309  01C5  087F               	movf	btemp+1,w
   310  01C6  0082               	movwf	2
   311  01C7                     init_ram0:	
   312                           ;Called with:
   313                           ;	high address of idata address in btemp 
   314                           ;	low address of idata address in btemp+1 
   315                           ;	low address of data in FSR
   316                           ;	high address + 1 of data in btemp-1
   317                           
   318  01C7  120A  118A  21C3  120A  118A  	fcall	init_fetch0
   319  01CC  0080               	movwf	0
   320  01CD  0A84               	incf	4,f
   321  01CE  0804               	movf	4,w
   322  01CF  067D               	xorwf	btemp+-1,w
   323  01D0  1903               	btfsc	3,2
   324  01D1  3400               	retlw	0
   325  01D2  0AFF               	incf	btemp+1,f
   326  01D3  1903               	btfsc	3,2
   327  01D4  0AFE               	incf	btemp,f
   328  01D5  29C7               	goto	init_ram0
   329                           
   330                           	psect	cstackCOMMON
   331  0070                     __pcstackCOMMON:
   332  0070                     ?_setup:
   333  0070                     ?_division:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_isr:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ??_isr:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_main:	
   343                           ; 1 bytes @ 0x0
   344                           
   345                           
   346                           ; 1 bytes @ 0x0
   347  0070                     	ds	3
   348  0073                     ??_setup:
   349  0073                     ?___awdiv:	
   350                           ; 1 bytes @ 0x3
   351                           
   352  0073                     ?___awmod:	
   353                           ; 2 bytes @ 0x3
   354                           
   355  0073                     ___awdiv@divisor:	
   356                           ; 2 bytes @ 0x3
   357                           
   358  0073                     ___awmod@divisor:	
   359                           ; 2 bytes @ 0x3
   360                           
   361                           
   362                           ; 2 bytes @ 0x3
   363  0073                     	ds	2
   364  0075                     ___awdiv@dividend:
   365  0075                     ___awmod@dividend:	
   366                           ; 2 bytes @ 0x5
   367                           
   368                           
   369                           ; 2 bytes @ 0x5
   370  0075                     	ds	2
   371  0077                     ??_main:
   372                           
   373                           	psect	cstackBANK0
   374  002A                     __pcstackBANK0:	
   375                           ; 1 bytes @ 0x7
   376                           
   377  002A                     ??___awdiv:
   378  002A                     ??___awmod:	
   379                           ; 1 bytes @ 0x0
   380                           
   381                           
   382                           ; 1 bytes @ 0x0
   383  002A                     	ds	1
   384  002B                     ___awdiv@counter:
   385  002B                     ___awmod@counter:	
   386                           ; 1 bytes @ 0x1
   387                           
   388                           
   389                           ; 1 bytes @ 0x1
   390  002B                     	ds	1
   391  002C                     ___awdiv@sign:
   392  002C                     ___awmod@sign:	
   393                           ; 1 bytes @ 0x2
   394                           
   395                           
   396                           ; 1 bytes @ 0x2
   397  002C                     	ds	1
   398  002D                     ___awdiv@quotient:
   399                           
   400                           ; 2 bytes @ 0x3
   401  002D                     	ds	2
   402  002F                     ??_division:
   403                           
   404                           ; 1 bytes @ 0x5
   405  002F                     	ds	3
   406                           
   407                           	psect	maintext
   408  01D6                     __pmaintext:	
   409 ;;
   410 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   411 ;;
   412 ;; *************** function _main *****************
   413 ;; Defined at:
   414 ;;		line 91 in file "main07.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;		None
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		wreg, status,2, status,0, pclath, cstack
   423 ;; Tracked objects:
   424 ;;		On entry : B00/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   428 ;;      Params:         0       0       0       0       0
   429 ;;      Locals:         0       0       0       0       0
   430 ;;      Temps:          0       0       0       0       0
   431 ;;      Totals:         0       0       0       0       0
   432 ;;Total ram usage:        0 bytes
   433 ;; Hardware stack levels required when called:    3
   434 ;; This function calls:
   435 ;;		_division
   436 ;;		_setup
   437 ;; This function is called by:
   438 ;;		Startup code after reset
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           
   443                           ;psect for function _main
   444  01D6                     _main:
   445  01D6                     l1039:	
   446                           ;incstack = 0
   447                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   448                           
   449  01D6  120A  118A  2198  120A  118A  	fcall	_setup
   450  01DB                     l76:
   451  01DB  120A  118A  208E  120A  118A  	fcall	_division
   452  01E0  29DB               	goto	l76
   453  01E1  120A  118A  280E   	ljmp	start
   454  01E4                     __end_of_main:
   455                           
   456                           	psect	text1
   457  0198                     __ptext1:	
   458 ;; *************** function _setup *****************
   459 ;; Defined at:
   460 ;;		line 106 in file "main07.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, status,2
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   474 ;;      Params:         0       0       0       0       0
   475 ;;      Locals:         0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0
   477 ;;      Totals:         0       0       0       0       0
   478 ;;Total ram usage:        0 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; Hardware stack levels required when called:    1
   481 ;; This function calls:
   482 ;;		Nothing
   483 ;; This function is called by:
   484 ;;		_main
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           
   489                           ;psect for function _setup
   490  0198                     _setup:
   491  0198                     l759:	
   492                           ;incstack = 0
   493                           ; Regs used in _setup: [wreg+status,2]
   494                           
   495  0198  1683               	bsf	3,5	;RP0=1, select bank1
   496  0199  1303               	bcf	3,6	;RP1=0, select bank1
   497  019A  130F               	bcf	15,6	;volatile
   498  019B  168F               	bsf	15,5	;volatile
   499  019C  120F               	bcf	15,4	;volatile
   500  019D  140F               	bsf	15,0	;volatile
   501  019E  1281               	bcf	1,5	;volatile
   502  019F  1181               	bcf	1,3	;volatile
   503  01A0  1501               	bsf	1,2	;volatile
   504  01A1  1481               	bsf	1,1	;volatile
   505  01A2  1401               	bsf	1,0	;volatile
   506  01A3                     l761:
   507  01A3  1683               	bsf	3,5	;RP0=1, select bank3
   508  01A4  1703               	bsf	3,6	;RP1=1, select bank3
   509  01A5  0188               	clrf	8	;volatile
   510  01A6  0189               	clrf	9	;volatile
   511  01A7  1683               	bsf	3,5	;RP0=1, select bank1
   512  01A8  1303               	bcf	3,6	;RP1=0, select bank1
   513  01A9  0185               	clrf	5	;volatile
   514  01AA                     l763:
   515  01AA  1406               	bsf	6,0	;volatile
   516  01AB                     l765:
   517  01AB  1486               	bsf	6,1	;volatile
   518  01AC  0187               	clrf	7	;volatile
   519  01AD  0188               	clrf	8	;volatile
   520  01AE  0189               	clrf	9	;volatile
   521  01AF  1283               	bcf	3,5	;RP0=0, select bank0
   522  01B0  1303               	bcf	3,6	;RP1=0, select bank0
   523  01B1  0185               	clrf	5	;volatile
   524  01B2  0186               	clrf	6	;volatile
   525  01B3  0187               	clrf	7	;volatile
   526  01B4  0188               	clrf	8	;volatile
   527  01B5  0189               	clrf	9	;volatile
   528  01B6                     l767:
   529  01B6  1683               	bsf	3,5	;RP0=1, select bank1
   530  01B7  1303               	bcf	3,6	;RP1=0, select bank1
   531  01B8  1381               	bcf	1,7	;volatile
   532  01B9                     l769:
   533  01B9  3003               	movlw	3
   534  01BA  0095               	movwf	21	;volatile
   535  01BB                     l771:
   536  01BB  1416               	bsf	22,0	;volatile
   537  01BC                     l773:
   538  01BC  1496               	bsf	22,1	;volatile
   539  01BD                     l775:
   540  01BD  178B               	bsf	11,7	;volatile
   541  01BE                     l777:
   542  01BE  140B               	bsf	11,0	;volatile
   543  01BF                     l779:
   544  01BF  158B               	bsf	11,3	;volatile
   545  01C0                     l781:
   546  01C0  168B               	bsf	11,5	;volatile
   547  01C1                     l783:
   548  01C1  110B               	bcf	11,2	;volatile
   549  01C2                     l82:
   550  01C2  0008               	return
   551  01C3                     __end_of_setup:
   552                           
   553                           	psect	text2
   554  008E                     __ptext2:	
   555 ;; *************** function _division *****************
   556 ;; Defined at:
   557 ;;		line 154 in file "main07.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;		None
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      unsigned char 
   564 ;; Registers used:
   565 ;;		wreg, status,2, status,0, pclath, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   571 ;;      Params:         0       0       0       0       0
   572 ;;      Locals:         0       0       0       0       0
   573 ;;      Temps:          0       3       0       0       0
   574 ;;      Totals:         0       3       0       0       0
   575 ;;Total ram usage:        3 bytes
   576 ;; Hardware stack levels used:    1
   577 ;; Hardware stack levels required when called:    2
   578 ;; This function calls:
   579 ;;		___awdiv
   580 ;;		___awmod
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           
   587                           ;psect for function _division
   588  008E                     _division:
   589  008E                     l1037:	
   590                           ;incstack = 0
   591                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
   592                           
   593  008E  3064               	movlw	100
   594  008F  00F3               	movwf	___awdiv@divisor
   595  0090  3000               	movlw	0
   596  0091  00F4               	movwf	___awdiv@divisor+1
   597  0092  1283               	bcf	3,5	;RP0=0, select bank0
   598  0093  1303               	bcf	3,6	;RP1=0, select bank0
   599  0094  0805               	movf	5,w	;volatile
   600  0095  00AF               	movwf	??_division
   601  0096  01B0               	clrf	??_division+1
   602  0097  082F               	movf	??_division,w
   603  0098  00F5               	movwf	___awdiv@dividend
   604  0099  0830               	movf	??_division+1,w
   605  009A  00F6               	movwf	___awdiv@dividend+1
   606  009B  120A  118A  2025  120A  118A  	fcall	___awdiv
   607  00A0  0873               	movf	?___awdiv,w
   608  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   609  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   610  00A3  00B1               	movwf	??_division+2
   611  00A4  0831               	movf	??_division+2,w
   612  00A5  00F8               	movwf	_centena
   613  00A6  3064               	movlw	100
   614  00A7  00F3               	movwf	___awmod@divisor
   615  00A8  3000               	movlw	0
   616  00A9  00F4               	movwf	___awmod@divisor+1
   617  00AA  0805               	movf	5,w	;volatile
   618  00AB  00AF               	movwf	??_division
   619  00AC  01B0               	clrf	??_division+1
   620  00AD  082F               	movf	??_division,w
   621  00AE  00F5               	movwf	___awmod@dividend
   622  00AF  0830               	movf	??_division+1,w
   623  00B0  00F6               	movwf	___awmod@dividend+1
   624  00B1  120A  118A  20E9  120A  118A  	fcall	___awmod
   625  00B6  0873               	movf	?___awmod,w
   626  00B7  1283               	bcf	3,5	;RP0=0, select bank0
   627  00B8  1303               	bcf	3,6	;RP1=0, select bank0
   628  00B9  00B1               	movwf	??_division+2
   629  00BA  0831               	movf	??_division+2,w
   630  00BB  00F7               	movwf	_residuo
   631  00BC  300A               	movlw	10
   632  00BD  00F3               	movwf	___awdiv@divisor
   633  00BE  3000               	movlw	0
   634  00BF  00F4               	movwf	___awdiv@divisor+1
   635  00C0  0877               	movf	_residuo,w
   636  00C1  00AF               	movwf	??_division
   637  00C2  01B0               	clrf	??_division+1
   638  00C3  082F               	movf	??_division,w
   639  00C4  00F5               	movwf	___awdiv@dividend
   640  00C5  0830               	movf	??_division+1,w
   641  00C6  00F6               	movwf	___awdiv@dividend+1
   642  00C7  120A  118A  2025  120A  118A  	fcall	___awdiv
   643  00CC  0873               	movf	?___awdiv,w
   644  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   645  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   646  00CF  00B1               	movwf	??_division+2
   647  00D0  0831               	movf	??_division+2,w
   648  00D1  00B3               	movwf	_decena
   649  00D2  300A               	movlw	10
   650  00D3  00F3               	movwf	___awmod@divisor
   651  00D4  3000               	movlw	0
   652  00D5  00F4               	movwf	___awmod@divisor+1
   653  00D6  0877               	movf	_residuo,w
   654  00D7  00AF               	movwf	??_division
   655  00D8  01B0               	clrf	??_division+1
   656  00D9  082F               	movf	??_division,w
   657  00DA  00F5               	movwf	___awmod@dividend
   658  00DB  0830               	movf	??_division+1,w
   659  00DC  00F6               	movwf	___awmod@dividend+1
   660  00DD  120A  118A  20E9  120A  118A  	fcall	___awmod
   661  00E2  0873               	movf	?___awmod,w
   662  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   663  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   664  00E5  00B1               	movwf	??_division+2
   665  00E6  0831               	movf	??_division+2,w
   666  00E7  00B2               	movwf	_unidad
   667  00E8                     l85:
   668  00E8  0008               	return
   669  00E9                     __end_of_division:
   670                           
   671                           	psect	text3
   672  00E9                     __ptext3:	
   673 ;; *************** function ___awmod *****************
   674 ;; Defined at:
   675 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;  divisor         2    3[COMMON] int 
   678 ;;  dividend        2    5[COMMON] int 
   679 ;; Auto vars:     Size  Location     Type
   680 ;;  sign            1    2[BANK0 ] unsigned char 
   681 ;;  counter         1    1[BANK0 ] unsigned char 
   682 ;; Return value:  Size  Location     Type
   683 ;;                  2    3[COMMON] int 
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   691 ;;      Params:         4       0       0       0       0
   692 ;;      Locals:         0       2       0       0       0
   693 ;;      Temps:          0       1       0       0       0
   694 ;;      Totals:         4       3       0       0       0
   695 ;;Total ram usage:        7 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; Hardware stack levels required when called:    1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_division
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           
   706                           ;psect for function ___awmod
   707  00E9                     ___awmod:
   708  00E9                     l999:	
   709                           ;incstack = 0
   710                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   711                           
   712  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   713  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   714  00EB  01AC               	clrf	___awmod@sign
   715  00EC                     l1001:
   716  00EC  1FF6               	btfss	___awmod@dividend+1,7
   717  00ED  28EF               	goto	u611
   718  00EE  28F0               	goto	u610
   719  00EF                     u611:
   720  00EF  28F7               	goto	l1007
   721  00F0                     u610:
   722  00F0                     l1003:
   723  00F0  09F5               	comf	___awmod@dividend,f
   724  00F1  09F6               	comf	___awmod@dividend+1,f
   725  00F2  0AF5               	incf	___awmod@dividend,f
   726  00F3  1903               	skipnz
   727  00F4  0AF6               	incf	___awmod@dividend+1,f
   728  00F5                     l1005:
   729  00F5  01AC               	clrf	___awmod@sign
   730  00F6  0AAC               	incf	___awmod@sign,f
   731  00F7                     l1007:
   732  00F7  1FF4               	btfss	___awmod@divisor+1,7
   733  00F8  28FA               	goto	u621
   734  00F9  28FB               	goto	u620
   735  00FA                     u621:
   736  00FA  2900               	goto	l1011
   737  00FB                     u620:
   738  00FB                     l1009:
   739  00FB  09F3               	comf	___awmod@divisor,f
   740  00FC  09F4               	comf	___awmod@divisor+1,f
   741  00FD  0AF3               	incf	___awmod@divisor,f
   742  00FE  1903               	skipnz
   743  00FF  0AF4               	incf	___awmod@divisor+1,f
   744  0100                     l1011:
   745  0100  0873               	movf	___awmod@divisor,w
   746  0101  0474               	iorwf	___awmod@divisor+1,w
   747  0102  1903               	btfsc	3,2
   748  0103  2905               	goto	u631
   749  0104  2906               	goto	u630
   750  0105                     u631:
   751  0105  2935               	goto	l1029
   752  0106                     u630:
   753  0106                     l1013:
   754  0106  01AB               	clrf	___awmod@counter
   755  0107  0AAB               	incf	___awmod@counter,f
   756  0108  2914               	goto	l1019
   757  0109                     l1015:
   758  0109  3001               	movlw	1
   759  010A                     u645:
   760  010A  1003               	clrc
   761  010B  0DF3               	rlf	___awmod@divisor,f
   762  010C  0DF4               	rlf	___awmod@divisor+1,f
   763  010D  3EFF               	addlw	-1
   764  010E  1D03               	skipz
   765  010F  290A               	goto	u645
   766  0110                     l1017:
   767  0110  3001               	movlw	1
   768  0111  00AA               	movwf	??___awmod
   769  0112  082A               	movf	??___awmod,w
   770  0113  07AB               	addwf	___awmod@counter,f
   771  0114                     l1019:
   772  0114  1FF4               	btfss	___awmod@divisor+1,7
   773  0115  2917               	goto	u651
   774  0116  2918               	goto	u650
   775  0117                     u651:
   776  0117  2909               	goto	l1015
   777  0118                     u650:
   778  0118                     l1021:
   779  0118  0874               	movf	___awmod@divisor+1,w
   780  0119  0276               	subwf	___awmod@dividend+1,w
   781  011A  1D03               	skipz
   782  011B  291E               	goto	u665
   783  011C  0873               	movf	___awmod@divisor,w
   784  011D  0275               	subwf	___awmod@dividend,w
   785  011E                     u665:
   786  011E  1C03               	skipc
   787  011F  2921               	goto	u661
   788  0120  2922               	goto	u660
   789  0121                     u661:
   790  0121  2928               	goto	l1025
   791  0122                     u660:
   792  0122                     l1023:
   793  0122  0873               	movf	___awmod@divisor,w
   794  0123  02F5               	subwf	___awmod@dividend,f
   795  0124  0874               	movf	___awmod@divisor+1,w
   796  0125  1C03               	skipc
   797  0126  03F6               	decf	___awmod@dividend+1,f
   798  0127  02F6               	subwf	___awmod@dividend+1,f
   799  0128                     l1025:
   800  0128  3001               	movlw	1
   801  0129                     u675:
   802  0129  1003               	clrc
   803  012A  0CF4               	rrf	___awmod@divisor+1,f
   804  012B  0CF3               	rrf	___awmod@divisor,f
   805  012C  3EFF               	addlw	-1
   806  012D  1D03               	skipz
   807  012E  2929               	goto	u675
   808  012F                     l1027:
   809  012F  3001               	movlw	1
   810  0130  02AB               	subwf	___awmod@counter,f
   811  0131  1D03               	btfss	3,2
   812  0132  2934               	goto	u681
   813  0133  2935               	goto	u680
   814  0134                     u681:
   815  0134  2918               	goto	l1021
   816  0135                     u680:
   817  0135                     l1029:
   818  0135  082C               	movf	___awmod@sign,w
   819  0136  1903               	btfsc	3,2
   820  0137  2939               	goto	u691
   821  0138  293A               	goto	u690
   822  0139                     u691:
   823  0139  293F               	goto	l1033
   824  013A                     u690:
   825  013A                     l1031:
   826  013A  09F5               	comf	___awmod@dividend,f
   827  013B  09F6               	comf	___awmod@dividend+1,f
   828  013C  0AF5               	incf	___awmod@dividend,f
   829  013D  1903               	skipnz
   830  013E  0AF6               	incf	___awmod@dividend+1,f
   831  013F                     l1033:
   832  013F  0876               	movf	___awmod@dividend+1,w
   833  0140  00F4               	movwf	?___awmod+1
   834  0141  0875               	movf	___awmod@dividend,w
   835  0142  00F3               	movwf	?___awmod
   836  0143                     l337:
   837  0143  0008               	return
   838  0144                     __end_of___awmod:
   839                           
   840                           	psect	text4
   841  0025                     __ptext4:	
   842 ;; *************** function ___awdiv *****************
   843 ;; Defined at:
   844 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  divisor         2    3[COMMON] int 
   847 ;;  dividend        2    5[COMMON] int 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  quotient        2    3[BANK0 ] int 
   850 ;;  sign            1    2[BANK0 ] unsigned char 
   851 ;;  counter         1    1[BANK0 ] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  2    3[COMMON] int 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         4       0       0       0       0
   862 ;;      Locals:         0       4       0       0       0
   863 ;;      Temps:          0       1       0       0       0
   864 ;;      Totals:         4       5       0       0       0
   865 ;;Total ram usage:        9 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    1
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_division
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           
   876                           ;psect for function ___awdiv
   877  0025                     ___awdiv:
   878  0025                     l955:	
   879                           ;incstack = 0
   880                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   881                           
   882  0025  1283               	bcf	3,5	;RP0=0, select bank0
   883  0026  1303               	bcf	3,6	;RP1=0, select bank0
   884  0027  01AC               	clrf	___awdiv@sign
   885  0028                     l957:
   886  0028  1FF4               	btfss	___awdiv@divisor+1,7
   887  0029  282B               	goto	u511
   888  002A  282C               	goto	u510
   889  002B                     u511:
   890  002B  2833               	goto	l963
   891  002C                     u510:
   892  002C                     l959:
   893  002C  09F3               	comf	___awdiv@divisor,f
   894  002D  09F4               	comf	___awdiv@divisor+1,f
   895  002E  0AF3               	incf	___awdiv@divisor,f
   896  002F  1903               	skipnz
   897  0030  0AF4               	incf	___awdiv@divisor+1,f
   898  0031                     l961:
   899  0031  01AC               	clrf	___awdiv@sign
   900  0032  0AAC               	incf	___awdiv@sign,f
   901  0033                     l963:
   902  0033  1FF6               	btfss	___awdiv@dividend+1,7
   903  0034  2836               	goto	u521
   904  0035  2837               	goto	u520
   905  0036                     u521:
   906  0036  2840               	goto	l969
   907  0037                     u520:
   908  0037                     l965:
   909  0037  09F5               	comf	___awdiv@dividend,f
   910  0038  09F6               	comf	___awdiv@dividend+1,f
   911  0039  0AF5               	incf	___awdiv@dividend,f
   912  003A  1903               	skipnz
   913  003B  0AF6               	incf	___awdiv@dividend+1,f
   914  003C                     l967:
   915  003C  3001               	movlw	1
   916  003D  00AA               	movwf	??___awdiv
   917  003E  082A               	movf	??___awdiv,w
   918  003F  06AC               	xorwf	___awdiv@sign,f
   919  0040                     l969:
   920  0040  01AD               	clrf	___awdiv@quotient
   921  0041  01AE               	clrf	___awdiv@quotient+1
   922  0042                     l971:
   923  0042  0873               	movf	___awdiv@divisor,w
   924  0043  0474               	iorwf	___awdiv@divisor+1,w
   925  0044  1903               	btfsc	3,2
   926  0045  2847               	goto	u531
   927  0046  2848               	goto	u530
   928  0047                     u531:
   929  0047  287F               	goto	l991
   930  0048                     u530:
   931  0048                     l973:
   932  0048  01AB               	clrf	___awdiv@counter
   933  0049  0AAB               	incf	___awdiv@counter,f
   934  004A  2856               	goto	l979
   935  004B                     l975:
   936  004B  3001               	movlw	1
   937  004C                     u545:
   938  004C  1003               	clrc
   939  004D  0DF3               	rlf	___awdiv@divisor,f
   940  004E  0DF4               	rlf	___awdiv@divisor+1,f
   941  004F  3EFF               	addlw	-1
   942  0050  1D03               	skipz
   943  0051  284C               	goto	u545
   944  0052                     l977:
   945  0052  3001               	movlw	1
   946  0053  00AA               	movwf	??___awdiv
   947  0054  082A               	movf	??___awdiv,w
   948  0055  07AB               	addwf	___awdiv@counter,f
   949  0056                     l979:
   950  0056  1FF4               	btfss	___awdiv@divisor+1,7
   951  0057  2859               	goto	u551
   952  0058  285A               	goto	u550
   953  0059                     u551:
   954  0059  284B               	goto	l975
   955  005A                     u550:
   956  005A                     l981:
   957  005A  3001               	movlw	1
   958  005B                     u565:
   959  005B  1003               	clrc
   960  005C  0DAD               	rlf	___awdiv@quotient,f
   961  005D  0DAE               	rlf	___awdiv@quotient+1,f
   962  005E  3EFF               	addlw	-1
   963  005F  1D03               	skipz
   964  0060  285B               	goto	u565
   965  0061  0874               	movf	___awdiv@divisor+1,w
   966  0062  0276               	subwf	___awdiv@dividend+1,w
   967  0063  1D03               	skipz
   968  0064  2867               	goto	u575
   969  0065  0873               	movf	___awdiv@divisor,w
   970  0066  0275               	subwf	___awdiv@dividend,w
   971  0067                     u575:
   972  0067  1C03               	skipc
   973  0068  286A               	goto	u571
   974  0069  286B               	goto	u570
   975  006A                     u571:
   976  006A  2872               	goto	l987
   977  006B                     u570:
   978  006B                     l983:
   979  006B  0873               	movf	___awdiv@divisor,w
   980  006C  02F5               	subwf	___awdiv@dividend,f
   981  006D  0874               	movf	___awdiv@divisor+1,w
   982  006E  1C03               	skipc
   983  006F  03F6               	decf	___awdiv@dividend+1,f
   984  0070  02F6               	subwf	___awdiv@dividend+1,f
   985  0071                     l985:
   986  0071  142D               	bsf	___awdiv@quotient,0
   987  0072                     l987:
   988  0072  3001               	movlw	1
   989  0073                     u585:
   990  0073  1003               	clrc
   991  0074  0CF4               	rrf	___awdiv@divisor+1,f
   992  0075  0CF3               	rrf	___awdiv@divisor,f
   993  0076  3EFF               	addlw	-1
   994  0077  1D03               	skipz
   995  0078  2873               	goto	u585
   996  0079                     l989:
   997  0079  3001               	movlw	1
   998  007A  02AB               	subwf	___awdiv@counter,f
   999  007B  1D03               	btfss	3,2
  1000  007C  287E               	goto	u591
  1001  007D  287F               	goto	u590
  1002  007E                     u591:
  1003  007E  285A               	goto	l981
  1004  007F                     u590:
  1005  007F                     l991:
  1006  007F  082C               	movf	___awdiv@sign,w
  1007  0080  1903               	btfsc	3,2
  1008  0081  2883               	goto	u601
  1009  0082  2884               	goto	u600
  1010  0083                     u601:
  1011  0083  2889               	goto	l995
  1012  0084                     u600:
  1013  0084                     l993:
  1014  0084  09AD               	comf	___awdiv@quotient,f
  1015  0085  09AE               	comf	___awdiv@quotient+1,f
  1016  0086  0AAD               	incf	___awdiv@quotient,f
  1017  0087  1903               	skipnz
  1018  0088  0AAE               	incf	___awdiv@quotient+1,f
  1019  0089                     l995:
  1020  0089  082E               	movf	___awdiv@quotient+1,w
  1021  008A  00F4               	movwf	?___awdiv+1
  1022  008B  082D               	movf	___awdiv@quotient,w
  1023  008C  00F3               	movwf	?___awdiv
  1024  008D                     l324:
  1025  008D  0008               	return
  1026  008E                     __end_of___awdiv:
  1027                           
  1028                           	psect	text5
  1029  0144                     __ptext5:	
  1030 ;; *************** function _isr *****************
  1031 ;; Defined at:
  1032 ;;		line 50 in file "main07.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1046 ;;      Params:         0       0       0       0       0
  1047 ;;      Locals:         0       0       0       0       0
  1048 ;;      Temps:          3       0       0       0       0
  1049 ;;      Totals:         3       0       0       0       0
  1050 ;;Total ram usage:        3 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		Interrupt level 1
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           
  1060                           ;psect for function _isr
  1061  0144                     _isr:
  1062  0144                     i1l913:
  1063  0144  1D0B               	btfss	11,2	;volatile
  1064  0145  2947               	goto	u45_21
  1065  0146  2948               	goto	u45_20
  1066  0147                     u45_21:
  1067  0147  297A               	goto	i1l941
  1068  0148                     u45_20:
  1069  0148                     i1l915:
  1070  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1071  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1072  014A  1109               	bcf	9,2	;volatile
  1073  014B  1409               	bsf	9,0	;volatile
  1074  014C                     i1l917:
  1075  014C  0878               	movf	_centena,w
  1076  014D  3E20               	addlw	(low (_tabla7seg| 0))& (0+255)
  1077  014E  0084               	movwf	4
  1078  014F  1383               	bcf	3,7	;select IRP bank0
  1079  0150  0800               	movf	0,w
  1080  0151  0088               	movwf	8	;volatile
  1081  0152                     i1l919:
  1082  0152  3001               	movlw	1
  1083  0153  00F9               	movwf	_multiplex
  1084  0154  3000               	movlw	0
  1085  0155  00FA               	movwf	_multiplex+1
  1086  0156                     i1l921:
  1087  0156  0379               	decf	_multiplex,w
  1088  0157  047A               	iorwf	_multiplex+1,w
  1089  0158  1D03               	btfss	3,2
  1090  0159  295B               	goto	u46_21
  1091  015A  295C               	goto	u46_20
  1092  015B                     u46_21:
  1093  015B  2967               	goto	i1l929
  1094  015C                     u46_20:
  1095  015C                     i1l923:
  1096  015C  1009               	bcf	9,0	;volatile
  1097  015D  1489               	bsf	9,1	;volatile
  1098  015E                     i1l925:
  1099  015E  0833               	movf	_decena,w
  1100  015F  3E20               	addlw	(low (_tabla7seg| 0))& (0+255)
  1101  0160  0084               	movwf	4
  1102  0161  0800               	movf	0,w
  1103  0162  0088               	movwf	8	;volatile
  1104  0163                     i1l927:
  1105  0163  3002               	movlw	2
  1106  0164  00F9               	movwf	_multiplex
  1107  0165  3000               	movlw	0
  1108  0166  00FA               	movwf	_multiplex+1
  1109  0167                     i1l929:
  1110  0167  3002               	movlw	2
  1111  0168  0679               	xorwf	_multiplex,w
  1112  0169  047A               	iorwf	_multiplex+1,w
  1113  016A  1D03               	btfss	3,2
  1114  016B  296D               	goto	u47_21
  1115  016C  296E               	goto	u47_20
  1116  016D                     u47_21:
  1117  016D  2977               	goto	i1l937
  1118  016E                     u47_20:
  1119  016E                     i1l931:
  1120  016E  1089               	bcf	9,1	;volatile
  1121  016F  1509               	bsf	9,2	;volatile
  1122  0170                     i1l933:
  1123  0170  0832               	movf	_unidad,w
  1124  0171  3E20               	addlw	(low (_tabla7seg| 0))& (0+255)
  1125  0172  0084               	movwf	4
  1126  0173  0800               	movf	0,w
  1127  0174  0088               	movwf	8	;volatile
  1128  0175                     i1l935:
  1129  0175  01F9               	clrf	_multiplex
  1130  0176  01FA               	clrf	_multiplex+1
  1131  0177                     i1l937:
  1132  0177  110B               	bcf	11,2	;volatile
  1133  0178                     i1l939:
  1134  0178  30FF               	movlw	255
  1135  0179  0081               	movwf	1	;volatile
  1136  017A                     i1l941:
  1137  017A  1C0B               	btfss	11,0	;volatile
  1138  017B  297D               	goto	u48_21
  1139  017C  297E               	goto	u48_20
  1140  017D                     u48_21:
  1141  017D  298F               	goto	i1l71
  1142  017E                     u48_20:
  1143  017E                     i1l943:
  1144  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1145  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0180  1806               	btfsc	6,0	;volatile
  1147  0181  2983               	goto	u49_21
  1148  0182  2984               	goto	u49_20
  1149  0183                     u49_21:
  1150  0183  2987               	goto	i1l947
  1151  0184                     u49_20:
  1152  0184                     i1l945:
  1153  0184  0805               	movf	5,w	;volatile
  1154  0185  3E01               	addlw	1
  1155  0186  0085               	movwf	5	;volatile
  1156  0187                     i1l947:
  1157  0187  1886               	btfsc	6,1	;volatile
  1158  0188  298A               	goto	u50_21
  1159  0189  298B               	goto	u50_20
  1160  018A                     u50_21:
  1161  018A  298E               	goto	i1l951
  1162  018B                     u50_20:
  1163  018B                     i1l949:
  1164  018B  0805               	movf	5,w	;volatile
  1165  018C  3EFF               	addlw	255
  1166  018D  0085               	movwf	5	;volatile
  1167  018E                     i1l951:
  1168  018E  100B               	bcf	11,0	;volatile
  1169  018F                     i1l71:
  1170  018F  0872               	movf	??_isr+2,w
  1171  0190  008A               	movwf	10
  1172  0191  0871               	movf	??_isr+1,w
  1173  0192  0084               	movwf	4
  1174  0193  0E70               	swapf	??_isr,w
  1175  0194  0083               	movwf	3
  1176  0195  0EFE               	swapf	btemp,f
  1177  0196  0E7E               	swapf	btemp,w
  1178  0197  0009               	retfie
  1179  0198                     __end_of_isr:
  1180  007E                     btemp	set	126	;btemp
  1181  007E                     wtemp0	set	126
  1182                           
  1183                           	psect	intentry
  1184  0004                     __pintentry:	
  1185                           ;incstack = 0
  1186                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1187                           
  1188  0004                     interrupt_function:
  1189  007E                     saved_w	set	btemp
  1190  0004  00FE               	movwf	btemp
  1191  0005  0E03               	swapf	3,w
  1192  0006  00F0               	movwf	??_isr
  1193  0007  0804               	movf	4,w
  1194  0008  00F1               	movwf	??_isr+1
  1195  0009  080A               	movf	10,w
  1196  000A  00F2               	movwf	??_isr+2
  1197  000B  120A  118A  2944   	ljmp	_isr
  1198                           
  1199                           	psect	config
  1200                           
  1201                           ;Config register CONFIG1 @ 0x2007
  1202                           ;	Oscillator Selection bits
  1203                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1204                           ;	Watchdog Timer Enable bit
  1205                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1206                           ;	Power-up Timer Enable bit
  1207                           ;	PWRTE = OFF, PWRT disabled
  1208                           ;	RE3/MCLR pin function select bit
  1209                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1210                           ;	Code Protection bit
  1211                           ;	CP = OFF, Program memory code protection is disabled
  1212                           ;	Data Code Protection bit
  1213                           ;	CPD = OFF, Data memory code protection is disabled
  1214                           ;	Brown Out Reset Selection bits
  1215                           ;	BOREN = OFF, BOR disabled
  1216                           ;	Internal External Switchover bit
  1217                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1218                           ;	Fail-Safe Clock Monitor Enabled bit
  1219                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1220                           ;	Low Voltage Programming Enable bit
  1221                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1222                           ;	In-Circuit Debugger Mode bit
  1223                           ;	DEBUG = 0x1, unprogrammed default
  1224  2007                     	org	8199
  1225  2007  20D4               	dw	8404
  1226                           
  1227                           ;Config register CONFIG2 @ 0x2008
  1228                           ;	Brown-out Reset Selection bit
  1229                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1230                           ;	Flash Program Memory Self Write Enable bits
  1231                           ;	WRT = OFF, Write protection off
  1232  2008                     	org	8200
  1233  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      8      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _division->___awdiv
    _division->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1598
                           _division
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _division                                             3     3      0    1598
                                              5 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              3 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              3 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _division
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Apr 18 22:22:57 2021

                      pc 0002                       l82 01C2                       l76 01DB  
                     l85 00E8             ___awdiv@sign 002C                       fsr 0004  
                    l324 008D                      l337 0143                      l761 01A3  
                    l771 01BB                      l763 01AA                      l781 01C0  
                    l773 01BC                      l765 01AB                      l783 01C1  
                    l775 01BD                      l767 01B6                      l759 0198  
                    l961 0031                      l777 01BE                      l769 01B9  
                    l971 0042                      l963 0033                      l955 0025  
                    l779 01BF                      l981 005A                      l973 0048  
                    l965 0037                      l957 0028                      l983 006B  
                    l975 004B                      l991 007F                      l967 003C  
                    l959 002C                      l993 0084                      l985 0071  
                    l977 0052                      l969 0040                      l995 0089  
                    l987 0072                      l979 0056                      l989 0079  
                    l999 00E9                      u510 002C                      u511 002B  
                    u600 0084                      u520 0037                      u601 0083  
                    u521 0036                      u530 0048                      u610 00F0  
                    u531 0047                      u611 00EF                      u620 00FB  
                    u621 00FA                      u550 005A                      u630 0106  
                    u551 0059                      u631 0105                      u545 004C  
                    u570 006B                      u650 0118                      u571 006A  
                    u651 0117                      u660 0122                      u565 005B  
                    u661 0121                      u645 010A                      u590 007F  
                    u591 007E                      u575 0067                      u680 0135  
                    u585 0073                      u681 0134                      u665 011E  
                    u690 013A                      u691 0139                      u675 0129  
                    _isr 0144                      fsr0 0004                      indf 0000  
           ___awmod@sign 002C                     l1001 00EC                     l1011 0100  
                   l1003 00F0                     l1021 0118                     l1013 0106  
                   l1005 00F5                     l1031 013A                     l1023 0122  
                   l1015 0109                     l1007 00F7                     l1033 013F  
                   l1025 0128                     l1017 0110                     l1009 00FB  
                   l1027 012F                     l1019 0114                     l1029 0135  
                   l1037 008E                     l1039 01D6                     ?_isr 0070  
                   _T0IF 005A                     _RBIF 0058                     i1l71 018F  
                   _TMR0 0001                     _WPUB 0095                     _main 01D6  
                   btemp 007E                     start 000E                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 008E          __end_of___awmod 0144  
                  _ANSEL 0188          ___awdiv@divisor 0073                    i1l921 0156  
                  i1l913 0144                    i1l931 016E                    i1l923 015C  
                  i1l915 0148                    i1l933 0170                    i1l925 015E  
                  i1l917 014C                    i1l941 017A                    i1l951 018E  
                  i1l943 017E                    i1l935 0175                    i1l927 0163  
                  i1l919 0152                    i1l945 0184                    i1l937 0177  
                  i1l929 0167                    i1l947 0187                    i1l939 0178  
                  i1l949 018B          ___awdiv@counter 002B                    u50_20 018B  
                  u50_21 018A                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u45_20 0148                    u45_21 0147                    u46_20 015C  
                  u46_21 015B                    u47_20 016E                    u47_21 016D  
                  u48_20 017E                    u48_21 017D                    u49_20 0184  
                  u49_21 0183                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _setup 0198  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 01E4                   ??_main 0077  
       ___awdiv@dividend 0075                   ?_setup 0070                   _ANSELH 0189  
       __end_of_division 00E9                ??___awdiv 002A                   _decena 0033  
              ??___awmod 002A         ___awdiv@quotient 002D          ___awmod@divisor 0073  
        ___awmod@counter 002B                   _unidad 0032                   saved_w 007E  
__end_of__initialization 0021           __pcstackCOMMON 0070             __pidataBANK0 01E4  
          __end_of_setup 01C3           _OPTION_REGbits 0081                  ??_setup 0073  
             __pnvCOMMON 0077               __pmaintext 01D6               __pintentry 0004  
              ?_division 0070                  ___awdiv 0025                  ___awmod 00E9  
                _centena 0078                  __ptext1 0198                  __ptext2 008E  
                __ptext3 00E9                  __ptext4 0025                  __ptext5 0144  
           __size_of_isr 0054         ___awmod@dividend 0075                  _residuo 0077  
   end_of_initialization 0021               ??_division 002F                _PORTBbits 0006  
              _PORTEbits 0009                _TRISBbits 0086      start_initialization 0011  
            __end_of_isr 0198               init_fetch0 01C3              __pdataBANK0 0020  
            __pbssCOMMON 0079                ___latbits 0002            __pcstackBANK0 002A  
      __size_of_division 005B                __pnvBANK0 0032                 ?___awdiv 0073  
               ?___awmod 0073                _tabla7seg 0020           __size_of_setup 002B  
      interrupt_function 0004                 _IOCBbits 0096                _multiplex 0079  
       __size_of___awdiv 0069         __size_of___awmod 005B                 _division 008E  
          __size_of_main 000E               _INTCONbits 000B                 init_ram0 01C7  
               intlevel1 0000               _OSCCONbits 008F  
