

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 20 12:57:15 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214  0215                     __pidataBANK0:
   215                           
   216                           ;initializer for _tabla7seg
   217  0215  343F               	retlw	63
   218  0216  3406               	retlw	6
   219  0217  345B               	retlw	91
   220  0218  344F               	retlw	79
   221  0219  3466               	retlw	102
   222  021A  346D               	retlw	109
   223  021B  347D               	retlw	125
   224  021C  3407               	retlw	7
   225  021D  347F               	retlw	127
   226  021E  346F               	retlw	111
   227  0009                     _PORTE	set	9
   228  0006                     _PORTB	set	6
   229  0005                     _PORTA	set	5
   230  001E                     _ADRESH	set	30
   231  0007                     _PORTC	set	7
   232  001F                     _ADCON0bits	set	31
   233  000C                     _PIR1bits	set	12
   234  0001                     _TMR0	set	1
   235  000B                     _INTCONbits	set	11
   236  0008                     _PORTD	set	8
   237  0009                     _PORTEbits	set	9
   238  005A                     _T0IF	set	90
   239  009F                     _ADCON1bits	set	159
   240  008C                     _PIE1bits	set	140
   241  0081                     _OPTION_REGbits	set	129
   242  008F                     _OSCCONbits	set	143
   243  0089                     _TRISE	set	137
   244  0088                     _TRISD	set	136
   245  0087                     _TRISC	set	135
   246  0086                     _TRISBbits	set	134
   247  0085                     _TRISAbits	set	133
   248  0189                     _ANSELH	set	393
   249  0188                     _ANSEL	set	392
   250                           
   251                           	psect	cinit
   252  0011                     start_initialization:	
   253                           ; #config settings
   254                           
   255  0011                     __initialization:
   256                           
   257                           ; Initialize objects allocated to BANK0
   258  0011  1383               	bcf	3,7	;select IRP bank0
   259  0012  3035               	movlw	low (__pdataBANK0+10)
   260  0013  00FD               	movwf	btemp+-1
   261  0014  3002               	movlw	high __pidataBANK0
   262  0015  00FE               	movwf	btemp
   263  0016  3015               	movlw	low __pidataBANK0
   264  0017  00FF               	movwf	btemp+1
   265  0018  302B               	movlw	low __pdataBANK0
   266  0019  0084               	movwf	4
   267  001A  120A  118A  2206  120A  118A  	fcall	init_ram0
   268                           
   269                           ; Clear objects allocated to BANK0
   270  001F  01B5               	clrf	__pbssBANK0& (0+127)
   271  0020  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   272  0021  01B7               	clrf	(__pbssBANK0+2)& (0+127)
   273                           
   274                           ; Clear objects allocated to COMMON
   275  0022  01F6               	clrf	__pbssCOMMON& (0+127)
   276  0023  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   277  0024  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   278  0025  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   279  0026                     end_of_initialization:	
   280                           ;End of C runtime variable initialization code
   281                           
   282  0026                     __end_of__initialization:
   283  0026  0183               	clrf	3
   284  0027  120A  118A  29D4   	ljmp	_main	;jump to C main() function
   285                           
   286                           	psect	bssCOMMON
   287  0076                     __pbssCOMMON:
   288  0076                     _num:
   289  0076                     	ds	1
   290  0077                     _residuo:
   291  0077                     	ds	1
   292  0078                     _decena:
   293  0078                     	ds	1
   294  0079                     _centena:
   295  0079                     	ds	1
   296                           
   297                           	psect	bssBANK0
   298  0035                     __pbssBANK0:
   299  0035                     _multiplex:
   300  0035                     	ds	2
   301  0037                     _unidad:
   302  0037                     	ds	1
   303                           
   304                           	psect	dataBANK0
   305  002B                     __pdataBANK0:
   306  002B                     _tabla7seg:
   307  002B                     	ds	10
   308                           
   309                           	psect	inittext
   310  0202                     init_fetch0:	
   311                           ;	Called with low address in FSR and high address in W
   312                           
   313  0202  087E               	movf	btemp,w
   314  0203  008A               	movwf	10
   315  0204  087F               	movf	btemp+1,w
   316  0205  0082               	movwf	2
   317  0206                     init_ram0:	
   318                           ;Called with:
   319                           ;	high address of idata address in btemp 
   320                           ;	low address of idata address in btemp+1 
   321                           ;	low address of data in FSR
   322                           ;	high address + 1 of data in btemp-1
   323                           
   324  0206  120A  118A  2202  120A  118A  	fcall	init_fetch0
   325  020B  0080               	movwf	0
   326  020C  0A84               	incf	4,f
   327  020D  0804               	movf	4,w
   328  020E  067D               	xorwf	btemp+-1,w
   329  020F  1903               	btfsc	3,2
   330  0210  3400               	retlw	0
   331  0211  0AFF               	incf	btemp+1,f
   332  0212  1903               	btfsc	3,2
   333  0213  0AFE               	incf	btemp,f
   334  0214  2A06               	goto	init_ram0
   335                           
   336                           	psect	cstackCOMMON
   337  0070                     __pcstackCOMMON:
   338  0070                     ?_setup:
   339  0070                     ?_division:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_isr:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ??_isr:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_main:	
   349                           ; 1 bytes @ 0x0
   350                           
   351                           
   352                           ; 1 bytes @ 0x0
   353  0070                     	ds	4
   354  0074                     ??_setup:
   355  0074                     ??___awdiv:	
   356                           ; 1 bytes @ 0x4
   357                           
   358  0074                     ??___awmod:	
   359                           ; 1 bytes @ 0x4
   360                           
   361                           
   362                           ; 1 bytes @ 0x4
   363  0074                     	ds	1
   364  0075                     ??_main:
   365                           
   366                           ; 1 bytes @ 0x5
   367  0075                     	ds	1
   368                           
   369                           	psect	cstackBANK0
   370  0020                     __pcstackBANK0:
   371  0020                     ?___awdiv:
   372  0020                     ?___awmod:	
   373                           ; 2 bytes @ 0x0
   374                           
   375  0020                     ___awdiv@divisor:	
   376                           ; 2 bytes @ 0x0
   377                           
   378  0020                     ___awmod@divisor:	
   379                           ; 2 bytes @ 0x0
   380                           
   381                           
   382                           ; 2 bytes @ 0x0
   383  0020                     	ds	2
   384  0022                     ___awdiv@dividend:
   385  0022                     ___awmod@dividend:	
   386                           ; 2 bytes @ 0x2
   387                           
   388                           
   389                           ; 2 bytes @ 0x2
   390  0022                     	ds	2
   391  0024                     ___awdiv@counter:
   392  0024                     ___awmod@counter:	
   393                           ; 1 bytes @ 0x4
   394                           
   395                           
   396                           ; 1 bytes @ 0x4
   397  0024                     	ds	1
   398  0025                     ___awdiv@sign:
   399  0025                     ___awmod@sign:	
   400                           ; 1 bytes @ 0x5
   401                           
   402                           
   403                           ; 1 bytes @ 0x5
   404  0025                     	ds	1
   405  0026                     ___awdiv@quotient:
   406                           
   407                           ; 2 bytes @ 0x6
   408  0026                     	ds	2
   409  0028                     ??_division:
   410                           
   411                           ; 1 bytes @ 0x8
   412  0028                     	ds	3
   413                           
   414                           	psect	maintext
   415  01D4                     __pmaintext:	
   416 ;;
   417 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   418 ;;
   419 ;; *************** function _main *****************
   420 ;; Defined at:
   421 ;;		line 82 in file "main08.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;		None
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, status,2, status,0, pclath, cstack
   430 ;; Tracked objects:
   431 ;;		On entry : B00/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   435 ;;      Params:         0       0       0       0       0
   436 ;;      Locals:         0       0       0       0       0
   437 ;;      Temps:          1       0       0       0       0
   438 ;;      Totals:         1       0       0       0       0
   439 ;;Total ram usage:        1 bytes
   440 ;; Hardware stack levels required when called:    3
   441 ;; This function calls:
   442 ;;		_division
   443 ;;		_setup
   444 ;; This function is called by:
   445 ;;		Startup code after reset
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           
   450                           ;psect for function _main
   451  01D4                     _main:
   452  01D4                     l1122:	
   453                           ;incstack = 0
   454                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   455                           
   456                           
   457                           ;main08.c: 85:     setup();
   458  01D4  120A  118A  219F  120A  118A  	fcall	_setup
   459  01D9                     l1124:
   460                           
   461                           ;main08.c: 86:     ADCON0bits.GO = 1;
   462  01D9  1283               	bcf	3,5	;RP0=0, select bank0
   463  01DA  1303               	bcf	3,6	;RP1=0, select bank0
   464  01DB  149F               	bsf	31,1	;volatile
   465  01DC                     l1126:
   466                           
   467                           ;main08.c: 89:     {;main08.c: 90:         if(ADCON0bits.GO == 0){
   468  01DC  1283               	bcf	3,5	;RP0=0, select bank0
   469  01DD  1303               	bcf	3,6	;RP1=0, select bank0
   470  01DE  189F               	btfsc	31,1	;volatile
   471  01DF  29E1               	goto	u721
   472  01E0  29E2               	goto	u720
   473  01E1                     u721:
   474  01E1  29F9               	goto	l1138
   475  01E2                     u720:
   476  01E2                     l1128:
   477                           
   478                           ;main08.c: 91:             if(ADCON0bits.CHS == 1)
   479  01E2  0C1F               	rrf	31,w	;volatile
   480  01E3  00F5               	movwf	??_main
   481  01E4  0C75               	rrf	??_main,w
   482  01E5  390F               	andlw	15
   483  01E6  3A01               	xorlw	1
   484  01E7  1D03               	skipz
   485  01E8  29EA               	goto	u731
   486  01E9  29EB               	goto	u730
   487  01EA                     u731:
   488  01EA  29EE               	goto	l1132
   489  01EB                     u730:
   490  01EB                     l1130:
   491                           
   492                           ;main08.c: 92:                 ADCON0bits.CHS = 0;
   493  01EB  30C3               	movlw	-61
   494  01EC  059F               	andwf	31,f	;volatile
   495  01ED  29F2               	goto	l1134
   496  01EE                     l1132:
   497                           
   498                           ;main08.c: 94:                 ADCON0bits.CHS = 1;
   499  01EE  081F               	movf	31,w	;volatile
   500  01EF  39C3               	andlw	-61
   501  01F0  3804               	iorlw	4
   502  01F1  009F               	movwf	31	;volatile
   503  01F2                     l1134:
   504                           
   505                           ;main08.c: 96:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   506  01F2  3021               	movlw	33
   507  01F3  00F5               	movwf	??_main
   508  01F4                     u747:
   509  01F4  0BF5               	decfsz	??_main,f
   510  01F5  29F4               	goto	u747
   511  01F6                     l1136:
   512                           
   513                           ;main08.c: 97:             ADCON0bits.GO = 1;
   514  01F6  1283               	bcf	3,5	;RP0=0, select bank0
   515  01F7  1303               	bcf	3,6	;RP1=0, select bank0
   516  01F8  149F               	bsf	31,1	;volatile
   517  01F9                     l1138:
   518                           
   519                           ;main08.c: 99:        division();
   520  01F9  120A  118A  2093  120A  118A  	fcall	_division
   521  01FE  29DC               	goto	l1126
   522  01FF  120A  118A  280E   	ljmp	start
   523  0202                     __end_of_main:
   524                           
   525                           	psect	text1
   526  019F                     __ptext1:	
   527 ;; *************** function _setup *****************
   528 ;; Defined at:
   529 ;;		line 105 in file "main08.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;		None
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, status,2, status,0
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   543 ;;      Params:         0       0       0       0       0
   544 ;;      Locals:         0       0       0       0       0
   545 ;;      Temps:          0       0       0       0       0
   546 ;;      Totals:         0       0       0       0       0
   547 ;;Total ram usage:        0 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; Hardware stack levels required when called:    1
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_main
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           
   558                           ;psect for function _setup
   559  019F                     _setup:
   560  019F                     l768:	
   561                           ;incstack = 0
   562                           ; Regs used in _setup: [wreg+status,2+status,0]
   563                           
   564                           
   565                           ;main08.c: 107:     ANSEL = 0b00000011;
   566  019F  3003               	movlw	3
   567  01A0  1683               	bsf	3,5	;RP0=1, select bank3
   568  01A1  1703               	bsf	3,6	;RP1=1, select bank3
   569  01A2  0088               	movwf	8	;volatile
   570                           
   571                           ;main08.c: 108:     ANSELH = 0b11111111;
   572  01A3  30FF               	movlw	255
   573  01A4  0089               	movwf	9	;volatile
   574  01A5                     l770:
   575                           
   576                           ;main08.c: 111:     TRISAbits.TRISA0 = 1;
   577  01A5  1683               	bsf	3,5	;RP0=1, select bank1
   578  01A6  1303               	bcf	3,6	;RP1=0, select bank1
   579  01A7  1405               	bsf	5,0	;volatile
   580  01A8                     l772:
   581                           
   582                           ;main08.c: 112:     TRISAbits.TRISA1 = 1;
   583  01A8  1485               	bsf	5,1	;volatile
   584  01A9                     l774:
   585                           
   586                           ;main08.c: 113:     TRISBbits.TRISB0 = 0;
   587  01A9  1006               	bcf	6,0	;volatile
   588  01AA                     l776:
   589                           
   590                           ;main08.c: 114:     TRISBbits.TRISB1 = 0;
   591  01AA  1086               	bcf	6,1	;volatile
   592  01AB                     l778:
   593                           
   594                           ;main08.c: 115:     TRISBbits.TRISB2 = 0;
   595  01AB  1106               	bcf	6,2	;volatile
   596  01AC                     l780:
   597                           
   598                           ;main08.c: 116:     TRISC = 0x00;
   599  01AC  0187               	clrf	7	;volatile
   600  01AD                     l782:
   601                           
   602                           ;main08.c: 117:     TRISD = 0x00;
   603  01AD  0188               	clrf	8	;volatile
   604  01AE                     l784:
   605                           
   606                           ;main08.c: 118:     TRISE = 0x00;
   607  01AE  0189               	clrf	9	;volatile
   608  01AF                     l786:
   609                           
   610                           ;main08.c: 121:     PORTA = 0x00;
   611  01AF  1283               	bcf	3,5	;RP0=0, select bank0
   612  01B0  1303               	bcf	3,6	;RP1=0, select bank0
   613  01B1  0185               	clrf	5	;volatile
   614  01B2                     l788:
   615                           
   616                           ;main08.c: 122:     PORTB = 0x00;
   617  01B2  0186               	clrf	6	;volatile
   618  01B3                     l790:
   619                           
   620                           ;main08.c: 123:     PORTC = 0x00;
   621  01B3  0187               	clrf	7	;volatile
   622  01B4                     l792:
   623                           
   624                           ;main08.c: 124:     PORTD = 0x00;
   625  01B4  0188               	clrf	8	;volatile
   626  01B5                     l794:
   627                           
   628                           ;main08.c: 125:     PORTE = 0X00;
   629  01B5  0189               	clrf	9	;volatile
   630  01B6                     l796:
   631                           
   632                           ;main08.c: 128:     OSCCONbits.IRCF2 = 0;
   633  01B6  1683               	bsf	3,5	;RP0=1, select bank1
   634  01B7  1303               	bcf	3,6	;RP1=0, select bank1
   635  01B8  130F               	bcf	15,6	;volatile
   636  01B9                     l798:
   637                           
   638                           ;main08.c: 129:     OSCCONbits.IRCF1 = 1;
   639  01B9  168F               	bsf	15,5	;volatile
   640  01BA                     l800:
   641                           
   642                           ;main08.c: 130:     OSCCONbits.IRCF0 = 0;
   643  01BA  120F               	bcf	15,4	;volatile
   644  01BB                     l802:
   645                           
   646                           ;main08.c: 131:     OSCCONbits.SCS = 1;
   647  01BB  140F               	bsf	15,0	;volatile
   648  01BC                     l804:
   649                           
   650                           ;main08.c: 134:     OPTION_REGbits.T0CS = 0;
   651  01BC  1281               	bcf	1,5	;volatile
   652  01BD                     l806:
   653                           
   654                           ;main08.c: 135:     OPTION_REGbits.PSA = 0;
   655  01BD  1181               	bcf	1,3	;volatile
   656  01BE                     l808:
   657                           
   658                           ;main08.c: 136:     OPTION_REGbits.PS2 = 1;
   659  01BE  1501               	bsf	1,2	;volatile
   660  01BF                     l810:
   661                           
   662                           ;main08.c: 137:     OPTION_REGbits.PS1 = 1;
   663  01BF  1481               	bsf	1,1	;volatile
   664  01C0                     l812:
   665                           
   666                           ;main08.c: 138:     OPTION_REGbits.PS0 = 1;
   667  01C0  1401               	bsf	1,0	;volatile
   668  01C1                     l814:
   669                           
   670                           ;main08.c: 141:     INTCONbits.GIE = 1;
   671  01C1  178B               	bsf	11,7	;volatile
   672  01C2                     l816:
   673                           
   674                           ;main08.c: 142:     INTCONbits.T0IE = 1;
   675  01C2  168B               	bsf	11,5	;volatile
   676  01C3                     l818:
   677                           
   678                           ;main08.c: 143:     INTCONbits.T0IF = 0;
   679  01C3  110B               	bcf	11,2	;volatile
   680  01C4                     l820:
   681                           
   682                           ;main08.c: 144:     INTCONbits.PEIE = 1;
   683  01C4  170B               	bsf	11,6	;volatile
   684  01C5                     l822:
   685                           
   686                           ;main08.c: 145:     PIE1bits.ADIE = 1;
   687  01C5  170C               	bsf	12,6	;volatile
   688  01C6                     l824:
   689                           
   690                           ;main08.c: 146:     PIR1bits.ADIF = 0;
   691  01C6  1283               	bcf	3,5	;RP0=0, select bank0
   692  01C7  1303               	bcf	3,6	;RP1=0, select bank0
   693  01C8  130C               	bcf	12,6	;volatile
   694  01C9                     l826:
   695                           
   696                           ;main08.c: 149:     ADCON0bits.ADCS0 = 1;
   697  01C9  171F               	bsf	31,6	;volatile
   698  01CA                     l828:
   699                           
   700                           ;main08.c: 150:     ADCON0bits.ADCS1 = 1;
   701  01CA  179F               	bsf	31,7	;volatile
   702  01CB                     l830:
   703                           
   704                           ;main08.c: 151:     ADCON0bits.ADON = 1;
   705  01CB  141F               	bsf	31,0	;volatile
   706  01CC                     l832:
   707                           
   708                           ;main08.c: 153:     ADCON0bits.CHS = 0;
   709  01CC  30C3               	movlw	-61
   710  01CD  059F               	andwf	31,f	;volatile
   711  01CE                     l834:
   712                           
   713                           ;main08.c: 155:     ADCON1bits.ADFM = 0;
   714  01CE  1683               	bsf	3,5	;RP0=1, select bank1
   715  01CF  1303               	bcf	3,6	;RP1=0, select bank1
   716  01D0  139F               	bcf	31,7	;volatile
   717  01D1                     l836:
   718                           
   719                           ;main08.c: 156:     ADCON1bits.VCFG0 = 0;
   720  01D1  121F               	bcf	31,4	;volatile
   721  01D2                     l838:
   722                           
   723                           ;main08.c: 157:     ADCON1bits.VCFG1 = 0;
   724  01D2  129F               	bcf	31,5	;volatile
   725  01D3                     l91:
   726  01D3  0008               	return
   727  01D4                     __end_of_setup:
   728                           
   729                           	psect	text2
   730  0093                     __ptext2:	
   731 ;; *************** function _division *****************
   732 ;; Defined at:
   733 ;;		line 161 in file "main08.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      unsigned char 
   740 ;; Registers used:
   741 ;;		wreg, status,2, status,0, pclath, cstack
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0
   749 ;;      Temps:          0       3       0       0       0
   750 ;;      Totals:         0       3       0       0       0
   751 ;;Total ram usage:        3 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; Hardware stack levels required when called:    2
   754 ;; This function calls:
   755 ;;		___awdiv
   756 ;;		___awmod
   757 ;; This function is called by:
   758 ;;		_main
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           
   763                           ;psect for function _division
   764  0093                     _division:
   765  0093                     l1120:	
   766                           ;incstack = 0
   767                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
   768                           
   769                           
   770                           ;main08.c: 162:     centena = num/100;
   771  0093  3064               	movlw	100
   772  0094  1283               	bcf	3,5	;RP0=0, select bank0
   773  0095  1303               	bcf	3,6	;RP1=0, select bank0
   774  0096  00A0               	movwf	___awdiv@divisor
   775  0097  3000               	movlw	0
   776  0098  00A1               	movwf	___awdiv@divisor+1
   777  0099  0876               	movf	_num,w
   778  009A  00A8               	movwf	??_division
   779  009B  01A9               	clrf	??_division+1
   780  009C  0828               	movf	??_division,w
   781  009D  00A2               	movwf	___awdiv@dividend
   782  009E  0829               	movf	??_division+1,w
   783  009F  00A3               	movwf	___awdiv@dividend+1
   784  00A0  120A  118A  202A  120A  118A  	fcall	___awdiv
   785  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   786  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   787  00A7  0820               	movf	?___awdiv,w
   788  00A8  00AA               	movwf	??_division+2
   789  00A9  082A               	movf	??_division+2,w
   790  00AA  00F9               	movwf	_centena
   791                           
   792                           ;main08.c: 163:     residuo = num%100;
   793  00AB  3064               	movlw	100
   794  00AC  00A0               	movwf	___awmod@divisor
   795  00AD  3000               	movlw	0
   796  00AE  00A1               	movwf	___awmod@divisor+1
   797  00AF  0876               	movf	_num,w
   798  00B0  00A8               	movwf	??_division
   799  00B1  01A9               	clrf	??_division+1
   800  00B2  0828               	movf	??_division,w
   801  00B3  00A2               	movwf	___awmod@dividend
   802  00B4  0829               	movf	??_division+1,w
   803  00B5  00A3               	movwf	___awmod@dividend+1
   804  00B6  120A  118A  20EE  120A  118A  	fcall	___awmod
   805  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   806  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   807  00BD  0820               	movf	?___awmod,w
   808  00BE  00AA               	movwf	??_division+2
   809  00BF  082A               	movf	??_division+2,w
   810  00C0  00F7               	movwf	_residuo
   811                           
   812                           ;main08.c: 164:     decena = residuo/10;
   813  00C1  300A               	movlw	10
   814  00C2  00A0               	movwf	___awdiv@divisor
   815  00C3  3000               	movlw	0
   816  00C4  00A1               	movwf	___awdiv@divisor+1
   817  00C5  0877               	movf	_residuo,w
   818  00C6  00A8               	movwf	??_division
   819  00C7  01A9               	clrf	??_division+1
   820  00C8  0828               	movf	??_division,w
   821  00C9  00A2               	movwf	___awdiv@dividend
   822  00CA  0829               	movf	??_division+1,w
   823  00CB  00A3               	movwf	___awdiv@dividend+1
   824  00CC  120A  118A  202A  120A  118A  	fcall	___awdiv
   825  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   826  00D2  1303               	bcf	3,6	;RP1=0, select bank0
   827  00D3  0820               	movf	?___awdiv,w
   828  00D4  00AA               	movwf	??_division+2
   829  00D5  082A               	movf	??_division+2,w
   830  00D6  00F8               	movwf	_decena
   831                           
   832                           ;main08.c: 165:     unidad = residuo%10;
   833  00D7  300A               	movlw	10
   834  00D8  00A0               	movwf	___awmod@divisor
   835  00D9  3000               	movlw	0
   836  00DA  00A1               	movwf	___awmod@divisor+1
   837  00DB  0877               	movf	_residuo,w
   838  00DC  00A8               	movwf	??_division
   839  00DD  01A9               	clrf	??_division+1
   840  00DE  0828               	movf	??_division,w
   841  00DF  00A2               	movwf	___awmod@dividend
   842  00E0  0829               	movf	??_division+1,w
   843  00E1  00A3               	movwf	___awmod@dividend+1
   844  00E2  120A  118A  20EE  120A  118A  	fcall	___awmod
   845  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   846  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   847  00E9  0820               	movf	?___awmod,w
   848  00EA  00AA               	movwf	??_division+2
   849  00EB  082A               	movf	??_division+2,w
   850  00EC  00B7               	movwf	_unidad
   851  00ED                     l94:
   852  00ED  0008               	return
   853  00EE                     __end_of_division:
   854                           
   855                           	psect	text3
   856  00EE                     __ptext3:	
   857 ;; *************** function ___awmod *****************
   858 ;; Defined at:
   859 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;  divisor         2    0[BANK0 ] int 
   862 ;;  dividend        2    2[BANK0 ] int 
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  sign            1    5[BANK0 ] unsigned char 
   865 ;;  counter         1    4[BANK0 ] unsigned char 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  2    0[BANK0 ] int 
   868 ;; Registers used:
   869 ;;		wreg, status,2, status,0
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   875 ;;      Params:         0       4       0       0       0
   876 ;;      Locals:         0       2       0       0       0
   877 ;;      Temps:          1       0       0       0       0
   878 ;;      Totals:         1       6       0       0       0
   879 ;;Total ram usage:        7 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; Hardware stack levels required when called:    1
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_division
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           
   890                           ;psect for function ___awmod
   891  00EE                     ___awmod:
   892  00EE                     l1082:	
   893                           ;incstack = 0
   894                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   895                           
   896  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   897  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   898  00F0  01A5               	clrf	___awmod@sign
   899  00F1                     l1084:
   900  00F1  1FA3               	btfss	___awmod@dividend+1,7
   901  00F2  28F4               	goto	u631
   902  00F3  28F5               	goto	u630
   903  00F4                     u631:
   904  00F4  28FC               	goto	l1090
   905  00F5                     u630:
   906  00F5                     l1086:
   907  00F5  09A2               	comf	___awmod@dividend,f
   908  00F6  09A3               	comf	___awmod@dividend+1,f
   909  00F7  0AA2               	incf	___awmod@dividend,f
   910  00F8  1903               	skipnz
   911  00F9  0AA3               	incf	___awmod@dividend+1,f
   912  00FA                     l1088:
   913  00FA  01A5               	clrf	___awmod@sign
   914  00FB  0AA5               	incf	___awmod@sign,f
   915  00FC                     l1090:
   916  00FC  1FA1               	btfss	___awmod@divisor+1,7
   917  00FD  28FF               	goto	u641
   918  00FE  2900               	goto	u640
   919  00FF                     u641:
   920  00FF  2905               	goto	l1094
   921  0100                     u640:
   922  0100                     l1092:
   923  0100  09A0               	comf	___awmod@divisor,f
   924  0101  09A1               	comf	___awmod@divisor+1,f
   925  0102  0AA0               	incf	___awmod@divisor,f
   926  0103  1903               	skipnz
   927  0104  0AA1               	incf	___awmod@divisor+1,f
   928  0105                     l1094:
   929  0105  0820               	movf	___awmod@divisor,w
   930  0106  0421               	iorwf	___awmod@divisor+1,w
   931  0107  1903               	btfsc	3,2
   932  0108  290A               	goto	u651
   933  0109  290B               	goto	u650
   934  010A                     u651:
   935  010A  293A               	goto	l1112
   936  010B                     u650:
   937  010B                     l1096:
   938  010B  01A4               	clrf	___awmod@counter
   939  010C  0AA4               	incf	___awmod@counter,f
   940  010D  2919               	goto	l1102
   941  010E                     l1098:
   942  010E  3001               	movlw	1
   943  010F                     u665:
   944  010F  1003               	clrc
   945  0110  0DA0               	rlf	___awmod@divisor,f
   946  0111  0DA1               	rlf	___awmod@divisor+1,f
   947  0112  3EFF               	addlw	-1
   948  0113  1D03               	skipz
   949  0114  290F               	goto	u665
   950  0115                     l1100:
   951  0115  3001               	movlw	1
   952  0116  00F4               	movwf	??___awmod
   953  0117  0874               	movf	??___awmod,w
   954  0118  07A4               	addwf	___awmod@counter,f
   955  0119                     l1102:
   956  0119  1FA1               	btfss	___awmod@divisor+1,7
   957  011A  291C               	goto	u671
   958  011B  291D               	goto	u670
   959  011C                     u671:
   960  011C  290E               	goto	l1098
   961  011D                     u670:
   962  011D                     l1104:
   963  011D  0821               	movf	___awmod@divisor+1,w
   964  011E  0223               	subwf	___awmod@dividend+1,w
   965  011F  1D03               	skipz
   966  0120  2923               	goto	u685
   967  0121  0820               	movf	___awmod@divisor,w
   968  0122  0222               	subwf	___awmod@dividend,w
   969  0123                     u685:
   970  0123  1C03               	skipc
   971  0124  2926               	goto	u681
   972  0125  2927               	goto	u680
   973  0126                     u681:
   974  0126  292D               	goto	l1108
   975  0127                     u680:
   976  0127                     l1106:
   977  0127  0820               	movf	___awmod@divisor,w
   978  0128  02A2               	subwf	___awmod@dividend,f
   979  0129  0821               	movf	___awmod@divisor+1,w
   980  012A  1C03               	skipc
   981  012B  03A3               	decf	___awmod@dividend+1,f
   982  012C  02A3               	subwf	___awmod@dividend+1,f
   983  012D                     l1108:
   984  012D  3001               	movlw	1
   985  012E                     u695:
   986  012E  1003               	clrc
   987  012F  0CA1               	rrf	___awmod@divisor+1,f
   988  0130  0CA0               	rrf	___awmod@divisor,f
   989  0131  3EFF               	addlw	-1
   990  0132  1D03               	skipz
   991  0133  292E               	goto	u695
   992  0134                     l1110:
   993  0134  3001               	movlw	1
   994  0135  02A4               	subwf	___awmod@counter,f
   995  0136  1D03               	btfss	3,2
   996  0137  2939               	goto	u701
   997  0138  293A               	goto	u700
   998  0139                     u701:
   999  0139  291D               	goto	l1104
  1000  013A                     u700:
  1001  013A                     l1112:
  1002  013A  0825               	movf	___awmod@sign,w
  1003  013B  1903               	btfsc	3,2
  1004  013C  293E               	goto	u711
  1005  013D  293F               	goto	u710
  1006  013E                     u711:
  1007  013E  2944               	goto	l1116
  1008  013F                     u710:
  1009  013F                     l1114:
  1010  013F  09A2               	comf	___awmod@dividend,f
  1011  0140  09A3               	comf	___awmod@dividend+1,f
  1012  0141  0AA2               	incf	___awmod@dividend,f
  1013  0142  1903               	skipnz
  1014  0143  0AA3               	incf	___awmod@dividend+1,f
  1015  0144                     l1116:
  1016  0144  0823               	movf	___awmod@dividend+1,w
  1017  0145  00A1               	movwf	?___awmod+1
  1018  0146  0822               	movf	___awmod@dividend,w
  1019  0147  00A0               	movwf	?___awmod
  1020  0148                     l346:
  1021  0148  0008               	return
  1022  0149                     __end_of___awmod:
  1023                           
  1024                           	psect	text4
  1025  002A                     __ptext4:	
  1026 ;; *************** function ___awdiv *****************
  1027 ;; Defined at:
  1028 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;  divisor         2    0[BANK0 ] int 
  1031 ;;  dividend        2    2[BANK0 ] int 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  quotient        2    6[BANK0 ] int 
  1034 ;;  sign            1    5[BANK0 ] unsigned char 
  1035 ;;  counter         1    4[BANK0 ] unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  2    0[BANK0 ] int 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1045 ;;      Params:         0       4       0       0       0
  1046 ;;      Locals:         0       4       0       0       0
  1047 ;;      Temps:          1       0       0       0       0
  1048 ;;      Totals:         1       8       0       0       0
  1049 ;;Total ram usage:        9 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; Hardware stack levels required when called:    1
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_division
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           
  1060                           ;psect for function ___awdiv
  1061  002A                     ___awdiv:
  1062  002A                     l1038:	
  1063                           ;incstack = 0
  1064                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1065                           
  1066  002A  1283               	bcf	3,5	;RP0=0, select bank0
  1067  002B  1303               	bcf	3,6	;RP1=0, select bank0
  1068  002C  01A5               	clrf	___awdiv@sign
  1069  002D                     l1040:
  1070  002D  1FA1               	btfss	___awdiv@divisor+1,7
  1071  002E  2830               	goto	u531
  1072  002F  2831               	goto	u530
  1073  0030                     u531:
  1074  0030  2838               	goto	l1046
  1075  0031                     u530:
  1076  0031                     l1042:
  1077  0031  09A0               	comf	___awdiv@divisor,f
  1078  0032  09A1               	comf	___awdiv@divisor+1,f
  1079  0033  0AA0               	incf	___awdiv@divisor,f
  1080  0034  1903               	skipnz
  1081  0035  0AA1               	incf	___awdiv@divisor+1,f
  1082  0036                     l1044:
  1083  0036  01A5               	clrf	___awdiv@sign
  1084  0037  0AA5               	incf	___awdiv@sign,f
  1085  0038                     l1046:
  1086  0038  1FA3               	btfss	___awdiv@dividend+1,7
  1087  0039  283B               	goto	u541
  1088  003A  283C               	goto	u540
  1089  003B                     u541:
  1090  003B  2845               	goto	l1052
  1091  003C                     u540:
  1092  003C                     l1048:
  1093  003C  09A2               	comf	___awdiv@dividend,f
  1094  003D  09A3               	comf	___awdiv@dividend+1,f
  1095  003E  0AA2               	incf	___awdiv@dividend,f
  1096  003F  1903               	skipnz
  1097  0040  0AA3               	incf	___awdiv@dividend+1,f
  1098  0041                     l1050:
  1099  0041  3001               	movlw	1
  1100  0042  00F4               	movwf	??___awdiv
  1101  0043  0874               	movf	??___awdiv,w
  1102  0044  06A5               	xorwf	___awdiv@sign,f
  1103  0045                     l1052:
  1104  0045  01A6               	clrf	___awdiv@quotient
  1105  0046  01A7               	clrf	___awdiv@quotient+1
  1106  0047                     l1054:
  1107  0047  0820               	movf	___awdiv@divisor,w
  1108  0048  0421               	iorwf	___awdiv@divisor+1,w
  1109  0049  1903               	btfsc	3,2
  1110  004A  284C               	goto	u551
  1111  004B  284D               	goto	u550
  1112  004C                     u551:
  1113  004C  2884               	goto	l1074
  1114  004D                     u550:
  1115  004D                     l1056:
  1116  004D  01A4               	clrf	___awdiv@counter
  1117  004E  0AA4               	incf	___awdiv@counter,f
  1118  004F  285B               	goto	l1062
  1119  0050                     l1058:
  1120  0050  3001               	movlw	1
  1121  0051                     u565:
  1122  0051  1003               	clrc
  1123  0052  0DA0               	rlf	___awdiv@divisor,f
  1124  0053  0DA1               	rlf	___awdiv@divisor+1,f
  1125  0054  3EFF               	addlw	-1
  1126  0055  1D03               	skipz
  1127  0056  2851               	goto	u565
  1128  0057                     l1060:
  1129  0057  3001               	movlw	1
  1130  0058  00F4               	movwf	??___awdiv
  1131  0059  0874               	movf	??___awdiv,w
  1132  005A  07A4               	addwf	___awdiv@counter,f
  1133  005B                     l1062:
  1134  005B  1FA1               	btfss	___awdiv@divisor+1,7
  1135  005C  285E               	goto	u571
  1136  005D  285F               	goto	u570
  1137  005E                     u571:
  1138  005E  2850               	goto	l1058
  1139  005F                     u570:
  1140  005F                     l1064:
  1141  005F  3001               	movlw	1
  1142  0060                     u585:
  1143  0060  1003               	clrc
  1144  0061  0DA6               	rlf	___awdiv@quotient,f
  1145  0062  0DA7               	rlf	___awdiv@quotient+1,f
  1146  0063  3EFF               	addlw	-1
  1147  0064  1D03               	skipz
  1148  0065  2860               	goto	u585
  1149  0066  0821               	movf	___awdiv@divisor+1,w
  1150  0067  0223               	subwf	___awdiv@dividend+1,w
  1151  0068  1D03               	skipz
  1152  0069  286C               	goto	u595
  1153  006A  0820               	movf	___awdiv@divisor,w
  1154  006B  0222               	subwf	___awdiv@dividend,w
  1155  006C                     u595:
  1156  006C  1C03               	skipc
  1157  006D  286F               	goto	u591
  1158  006E  2870               	goto	u590
  1159  006F                     u591:
  1160  006F  2877               	goto	l1070
  1161  0070                     u590:
  1162  0070                     l1066:
  1163  0070  0820               	movf	___awdiv@divisor,w
  1164  0071  02A2               	subwf	___awdiv@dividend,f
  1165  0072  0821               	movf	___awdiv@divisor+1,w
  1166  0073  1C03               	skipc
  1167  0074  03A3               	decf	___awdiv@dividend+1,f
  1168  0075  02A3               	subwf	___awdiv@dividend+1,f
  1169  0076                     l1068:
  1170  0076  1426               	bsf	___awdiv@quotient,0
  1171  0077                     l1070:
  1172  0077  3001               	movlw	1
  1173  0078                     u605:
  1174  0078  1003               	clrc
  1175  0079  0CA1               	rrf	___awdiv@divisor+1,f
  1176  007A  0CA0               	rrf	___awdiv@divisor,f
  1177  007B  3EFF               	addlw	-1
  1178  007C  1D03               	skipz
  1179  007D  2878               	goto	u605
  1180  007E                     l1072:
  1181  007E  3001               	movlw	1
  1182  007F  02A4               	subwf	___awdiv@counter,f
  1183  0080  1D03               	btfss	3,2
  1184  0081  2883               	goto	u611
  1185  0082  2884               	goto	u610
  1186  0083                     u611:
  1187  0083  285F               	goto	l1064
  1188  0084                     u610:
  1189  0084                     l1074:
  1190  0084  0825               	movf	___awdiv@sign,w
  1191  0085  1903               	btfsc	3,2
  1192  0086  2888               	goto	u621
  1193  0087  2889               	goto	u620
  1194  0088                     u621:
  1195  0088  288E               	goto	l1078
  1196  0089                     u620:
  1197  0089                     l1076:
  1198  0089  09A6               	comf	___awdiv@quotient,f
  1199  008A  09A7               	comf	___awdiv@quotient+1,f
  1200  008B  0AA6               	incf	___awdiv@quotient,f
  1201  008C  1903               	skipnz
  1202  008D  0AA7               	incf	___awdiv@quotient+1,f
  1203  008E                     l1078:
  1204  008E  0827               	movf	___awdiv@quotient+1,w
  1205  008F  00A1               	movwf	?___awdiv+1
  1206  0090  0826               	movf	___awdiv@quotient,w
  1207  0091  00A0               	movwf	?___awdiv
  1208  0092                     l333:
  1209  0092  0008               	return
  1210  0093                     __end_of___awdiv:
  1211                           
  1212                           	psect	text5
  1213  0149                     __ptext5:	
  1214 ;; *************** function _isr *****************
  1215 ;; Defined at:
  1216 ;;		line 49 in file "main08.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1230 ;;      Params:         0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0
  1232 ;;      Temps:          4       0       0       0       0
  1233 ;;      Totals:         4       0       0       0       0
  1234 ;;Total ram usage:        4 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		Interrupt level 1
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           
  1244                           ;psect for function _isr
  1245  0149                     _isr:
  1246  0149                     i1l982:
  1247                           
  1248                           ;main08.c: 50:     if(T0IF == 1){
  1249  0149  1D0B               	btfss	11,2	;volatile
  1250  014A  294C               	goto	u46_21
  1251  014B  294D               	goto	u46_20
  1252  014C                     u46_21:
  1253  014C  297F               	goto	i1l1010
  1254  014D                     u46_20:
  1255  014D                     i1l984:
  1256                           
  1257                           ;main08.c: 51:         PORTEbits.RE2 = 0;
  1258  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1259  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1260  014F  1109               	bcf	9,2	;volatile
  1261                           
  1262                           ;main08.c: 52:         PORTEbits.RE0 = 1;
  1263  0150  1409               	bsf	9,0	;volatile
  1264  0151                     i1l986:
  1265                           
  1266                           ;main08.c: 53:         PORTD = (tabla7seg[centena]);
  1267  0151  0879               	movf	_centena,w
  1268  0152  3E2B               	addlw	(low (_tabla7seg| 0))& (0+255)
  1269  0153  0084               	movwf	4
  1270  0154  1383               	bcf	3,7	;select IRP bank0
  1271  0155  0800               	movf	0,w
  1272  0156  0088               	movwf	8	;volatile
  1273  0157                     i1l988:
  1274                           
  1275                           ;main08.c: 54:         multiplex = 0b00000001;
  1276  0157  3001               	movlw	1
  1277  0158  00B5               	movwf	_multiplex
  1278  0159  3000               	movlw	0
  1279  015A  00B6               	movwf	_multiplex+1
  1280  015B                     i1l990:
  1281                           
  1282                           ;main08.c: 56:         if (multiplex == 0b00000001){
  1283  015B  0335               	decf	_multiplex,w
  1284  015C  0436               	iorwf	_multiplex+1,w
  1285  015D  1D03               	btfss	3,2
  1286  015E  2960               	goto	u47_21
  1287  015F  2961               	goto	u47_20
  1288  0160                     u47_21:
  1289  0160  296C               	goto	i1l998
  1290  0161                     u47_20:
  1291  0161                     i1l992:
  1292                           
  1293                           ;main08.c: 57:             PORTEbits.RE0 = 0;
  1294  0161  1009               	bcf	9,0	;volatile
  1295                           
  1296                           ;main08.c: 58:             PORTEbits.RE1 = 1;
  1297  0162  1489               	bsf	9,1	;volatile
  1298  0163                     i1l994:
  1299                           
  1300                           ;main08.c: 59:             PORTD = (tabla7seg[decena]);
  1301  0163  0878               	movf	_decena,w
  1302  0164  3E2B               	addlw	(low (_tabla7seg| 0))& (0+255)
  1303  0165  0084               	movwf	4
  1304  0166  0800               	movf	0,w
  1305  0167  0088               	movwf	8	;volatile
  1306  0168                     i1l996:
  1307                           
  1308                           ;main08.c: 60:             multiplex = 0b00000010;
  1309  0168  3002               	movlw	2
  1310  0169  00B5               	movwf	_multiplex
  1311  016A  3000               	movlw	0
  1312  016B  00B6               	movwf	_multiplex+1
  1313  016C                     i1l998:
  1314                           
  1315                           ;main08.c: 62:         if (multiplex == 0b00000010){
  1316  016C  3002               	movlw	2
  1317  016D  0635               	xorwf	_multiplex,w
  1318  016E  0436               	iorwf	_multiplex+1,w
  1319  016F  1D03               	btfss	3,2
  1320  0170  2972               	goto	u48_21
  1321  0171  2973               	goto	u48_20
  1322  0172                     u48_21:
  1323  0172  297C               	goto	i1l1006
  1324  0173                     u48_20:
  1325  0173                     i1l1000:
  1326                           
  1327                           ;main08.c: 63:             PORTEbits.RE1 = 0;
  1328  0173  1089               	bcf	9,1	;volatile
  1329                           
  1330                           ;main08.c: 64:             PORTEbits.RE2 = 1;
  1331  0174  1509               	bsf	9,2	;volatile
  1332  0175                     i1l1002:
  1333                           
  1334                           ;main08.c: 65:             PORTD = (tabla7seg[unidad]);
  1335  0175  0837               	movf	_unidad,w
  1336  0176  3E2B               	addlw	(low (_tabla7seg| 0))& (0+255)
  1337  0177  0084               	movwf	4
  1338  0178  0800               	movf	0,w
  1339  0179  0088               	movwf	8	;volatile
  1340  017A                     i1l1004:
  1341                           
  1342                           ;main08.c: 66:             multiplex = 0b00000000;
  1343  017A  01B5               	clrf	_multiplex
  1344  017B  01B6               	clrf	_multiplex+1
  1345  017C                     i1l1006:
  1346                           
  1347                           ;main08.c: 68:         INTCONbits.T0IF = 0;
  1348  017C  110B               	bcf	11,2	;volatile
  1349  017D                     i1l1008:
  1350                           
  1351                           ;main08.c: 69:         TMR0 = 255;
  1352  017D  30FF               	movlw	255
  1353  017E  0081               	movwf	1	;volatile
  1354  017F                     i1l1010:
  1355                           
  1356                           ;main08.c: 71:     if(PIR1bits.ADIF == 1)
  1357  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1358  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1359  0181  1F0C               	btfss	12,6	;volatile
  1360  0182  2984               	goto	u49_21
  1361  0183  2985               	goto	u49_20
  1362  0184                     u49_21:
  1363  0184  2996               	goto	i1l77
  1364  0185                     u49_20:
  1365  0185                     i1l1012:
  1366                           
  1367                           ;main08.c: 72:        {;main08.c: 73:            if(ADCON0bits.CHS == 0)
  1368  0185  0C1F               	rrf	31,w	;volatile
  1369  0186  00F0               	movwf	??_isr
  1370  0187  0C70               	rrf	??_isr,w
  1371  0188  390F               	andlw	15
  1372  0189  3A00               	xorlw	0
  1373  018A  1D03               	skipz
  1374  018B  298D               	goto	u50_21
  1375  018C  298E               	goto	u50_20
  1376  018D                     u50_21:
  1377  018D  2991               	goto	i1l1016
  1378  018E                     u50_20:
  1379  018E                     i1l1014:
  1380                           
  1381                           ;main08.c: 74:                PORTC = ADRESH;
  1382  018E  081E               	movf	30,w	;volatile
  1383  018F  0087               	movwf	7	;volatile
  1384  0190  2995               	goto	i1l1018
  1385  0191                     i1l1016:
  1386                           
  1387                           ;main08.c: 77:                num = ADRESH;
  1388  0191  081E               	movf	30,w	;volatile
  1389  0192  00F0               	movwf	??_isr
  1390  0193  0870               	movf	??_isr,w
  1391  0194  00F6               	movwf	_num
  1392  0195                     i1l1018:
  1393                           
  1394                           ;main08.c: 79:            PIR1bits.ADIF = 0;
  1395  0195  130C               	bcf	12,6	;volatile
  1396  0196                     i1l77:
  1397  0196  0873               	movf	??_isr+3,w
  1398  0197  008A               	movwf	10
  1399  0198  0872               	movf	??_isr+2,w
  1400  0199  0084               	movwf	4
  1401  019A  0E71               	swapf	??_isr+1,w
  1402  019B  0083               	movwf	3
  1403  019C  0EFE               	swapf	btemp,f
  1404  019D  0E7E               	swapf	btemp,w
  1405  019E  0009               	retfie
  1406  019F                     __end_of_isr:
  1407  007E                     btemp	set	126	;btemp
  1408  007E                     wtemp0	set	126
  1409                           
  1410                           	psect	intentry
  1411  0004                     __pintentry:	
  1412                           ;incstack = 0
  1413                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1414                           
  1415  0004                     interrupt_function:
  1416  007E                     saved_w	set	btemp
  1417  0004  00FE               	movwf	btemp
  1418  0005  0E03               	swapf	3,w
  1419  0006  00F1               	movwf	??_isr+1
  1420  0007  0804               	movf	4,w
  1421  0008  00F2               	movwf	??_isr+2
  1422  0009  080A               	movf	10,w
  1423  000A  00F3               	movwf	??_isr+3
  1424  000B  120A  118A  2949   	ljmp	_isr
  1425                           
  1426                           	psect	config
  1427                           
  1428                           ;Config register CONFIG1 @ 0x2007
  1429                           ;	Oscillator Selection bits
  1430                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1431                           ;	Watchdog Timer Enable bit
  1432                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1433                           ;	Power-up Timer Enable bit
  1434                           ;	PWRTE = ON, PWRT enabled
  1435                           ;	RE3/MCLR pin function select bit
  1436                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1437                           ;	Code Protection bit
  1438                           ;	CP = OFF, Program memory code protection is disabled
  1439                           ;	Data Code Protection bit
  1440                           ;	CPD = OFF, Data memory code protection is disabled
  1441                           ;	Brown Out Reset Selection bits
  1442                           ;	BOREN = OFF, BOR disabled
  1443                           ;	Internal External Switchover bit
  1444                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1445                           ;	Fail-Safe Clock Monitor Enabled bit
  1446                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1447                           ;	Low Voltage Programming Enable bit
  1448                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1449                           ;	In-Circuit Debugger Mode bit
  1450                           ;	DEBUG = 0x1, unprogrammed default
  1451  2007                     	org	8199
  1452  2007  20C4               	dw	8388
  1453                           
  1454                           ;Config register CONFIG2 @ 0x2008
  1455                           ;	Brown-out Reset Selection bit
  1456                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1457                           ;	Flash Program Memory Self Write Enable bits
  1458                           ;	WRT = OFF, Write protection off
  1459  2008                     	org	8200
  1460  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     11      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _division->___awdiv
    _division->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1598
                                              5 COMMON     1     1      0
                           _division
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _division                                             3     3      0    1598
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _division
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 20 12:57:15 2021

                      pc 0002                       l91 01D3                       l94 00ED  
           ___awdiv@sign 0025                       fsr 0004                      l333 0092  
                    l346 0148                      l800 01BA                      l810 01BF  
                    l802 01BB                      l820 01C4                      l812 01C0  
                    l804 01BC                      l830 01CB                      l822 01C5  
                    l814 01C1                      l806 01BD                      l832 01CC  
                    l824 01C6                      l816 01C2                      l808 01BE  
                    l834 01CE                      l826 01C9                      l818 01C3  
                    l770 01A5                      l836 01D1                      l828 01CA  
                    l780 01AC                      l772 01A8                      l838 01D2  
                    l790 01B3                      l782 01AD                      l774 01A9  
                    l792 01B4                      l784 01AE                      l776 01AA  
                    l768 019F                      l794 01B5                      l786 01AF  
                    l778 01AB                      l796 01B6                      l788 01B2  
                    l798 01B9                      u610 0084                      u530 0031  
                    u611 0083                      u531 0030                      u620 0089  
                    u540 003C                      u700 013A                      u621 0088  
                    u605 0078                      u541 003B                      u701 0139  
                    u550 004D                      u710 013F                      u630 00F5  
                    u551 004C                      u711 013E                      u631 00F4  
                    u640 0100                      u720 01E2                      u641 00FF  
                    u721 01E1                      u570 005F                      u650 010B  
                    u730 01EB                      u571 005E                      u651 010A  
                    u731 01EA                      u565 0051                      u590 0070  
                    u670 011D                      u591 006F                      u671 011C  
                    u680 0127                      u585 0060                      u681 0126  
                    u665 010F                      u595 006C                      u747 01F4  
                    u685 0123                      u695 012E                      _isr 0149  
                    _num 0076                      fsr0 0004                      indf 0000  
           ___awmod@sign 0025                     l1100 0115                     l1110 0134  
                   l1102 0119                     l1040 002D                     l1104 011D  
                   l1112 013A                     l1120 0093                     l1050 0041  
                   l1042 0031                     l1114 013F                     l1106 0127  
                   l1130 01EB                     l1122 01D4                     l1060 0057  
                   l1052 0045                     l1044 0036                     l1116 0144  
                   l1108 012D                     l1132 01EE                     l1124 01D9  
                   l1070 0077                     l1062 005B                     l1054 0047  
                   l1046 0038                     l1038 002A                     l1134 01F2  
                   l1126 01DC                     l1072 007E                     l1064 005F  
                   l1056 004D                     l1048 003C                     l1136 01F6  
                   l1128 01E2                     l1066 0070                     l1058 0050  
                   l1074 0084                     l1090 00FC                     l1082 00EE  
                   l1138 01F9                     l1076 0089                     l1068 0076  
                   l1092 0100                     l1084 00F1                     l1078 008E  
                   l1094 0105                     l1086 00F5                     l1096 010B  
                   l1088 00FA                     l1098 010E                     ?_isr 0070  
                   _T0IF 005A                     i1l77 0196                     _TMR0 0001  
                   _main 01D4                     btemp 007E                     start 000E  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 0093  
        __end_of___awmod 0149                    _ANSEL 0188          ___awdiv@divisor 0020  
                  i1l990 015B                    i1l982 0149                    i1l992 0161  
                  i1l984 014D                    i1l994 0163                    i1l986 0151  
                  i1l996 0168                    i1l988 0157                    i1l998 016C  
        ___awdiv@counter 0024                    u50_20 018E                    u50_21 018D  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u46_20 014D  
                  u46_21 014C                    u47_20 0161                    u47_21 0160  
                  u48_20 0173                    u48_21 0172                    u49_20 0185  
                  u49_21 0184                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 019F                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0202                   ??_main 0075                   _ADRESH 001E  
       ___awdiv@dividend 0022                   ?_setup 0070                   _ANSELH 0189  
                 i1l1000 0173                   i1l1002 0175                   i1l1010 017F  
                 i1l1012 0185                   i1l1004 017A                   i1l1014 018E  
                 i1l1006 017C                   i1l1016 0191                   i1l1008 017D  
                 i1l1018 0195         __end_of_division 00EE                ??___awdiv 0074  
                 _decena 0078                ??___awmod 0074         ___awdiv@quotient 0026  
        ___awmod@divisor 0020          ___awmod@counter 0024                   _unidad 0037  
                 saved_w 007E  __end_of__initialization 0026           __pcstackCOMMON 0070  
           __pidataBANK0 0215            __end_of_setup 01D4           _OPTION_REGbits 0081  
                ??_setup 0074               __pbssBANK0 0035               __pmaintext 01D4  
             __pintentry 0004                ?_division 0070                  ___awdiv 002A  
                ___awmod 00EE                  _centena 0079                  __ptext1 019F  
                __ptext2 0093                  __ptext3 00EE                  __ptext4 002A  
                __ptext5 0149             __size_of_isr 0056         ___awmod@dividend 0022  
                _residuo 0077     end_of_initialization 0026               ??_division 0028  
              _PORTEbits 0009                _TRISAbits 0085                _TRISBbits 0086  
    start_initialization 0011              __end_of_isr 019F               init_fetch0 0202  
            __pdataBANK0 002B              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_division 005B                 ?___awdiv 0020  
               ?___awmod 0020                _tabla7seg 002B           __size_of_setup 0035  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
              _multiplex 0035               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of___awdiv 0069         __size_of___awmod 005B                 _division 0093  
          __size_of_main 002E               _INTCONbits 000B                 init_ram0 0206  
               intlevel1 0000               _OSCCONbits 008F  
