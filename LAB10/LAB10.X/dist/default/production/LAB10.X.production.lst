

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun May 09 19:36:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  000C                     _PIR1bits	set	12
   206  0018                     _RCSTAbits	set	24
   207  000B                     _INTCONbits	set	11
   208  0006                     _PORTB	set	6
   209  0005                     _PORTA	set	5
   210  001A                     _RCREG	set	26
   211  0019                     _TXREG	set	25
   212  0065                     _RCIF	set	101
   213  0064                     _TXIF	set	100
   214  009A                     _SPBRGH	set	154
   215  0099                     _SPBRG	set	153
   216  0098                     _TXSTAbits	set	152
   217  008C                     _PIE1bits	set	140
   218  0086                     _TRISB	set	134
   219  0085                     _TRISA	set	133
   220  008F                     _OSCCONbits	set	143
   221  0187                     _BAUDCTLbits	set	391
   222  0189                     _ANSELH	set	393
   223  0188                     _ANSEL	set	392
   224                           
   225                           	psect	strings
   226  0003                     __pstrings:
   227  0003                     stringtab:
   228  0003                     __stringtab:
   229  0003                     stringcode:	
   230                           ;	String table - string pointers are 1 byte each
   231                           
   232  0003                     stringdir:
   233  0003  3000               	movlw	high stringdir
   234  0004  008A               	movwf	10
   235  0005  0804               	movf	4,w
   236  0006  0A84               	incf	4,f
   237  0007  0782               	addwf	2,f
   238  0008                     __stringbase:
   239  0008  3400               	retlw	0
   240  0009                     __end_of__stringtab:
   241  0009                     STR_6:
   242  0009  340D               	retlw	13
   243  000A  3420               	retlw	32	;' '
   244  000B  3449               	retlw	73	;'I'
   245  000C  346E               	retlw	110	;'n'
   246  000D  3473               	retlw	115	;'s'
   247  000E  3465               	retlw	101	;'e'
   248  000F  3472               	retlw	114	;'r'
   249  0010  3474               	retlw	116	;'t'
   250  0011  3461               	retlw	97	;'a'
   251  0012  3472               	retlw	114	;'r'
   252  0013  3420               	retlw	32	;' '
   253  0014  3463               	retlw	99	;'c'
   254  0015  3461               	retlw	97	;'a'
   255  0016  3472               	retlw	114	;'r'
   256  0017  3461               	retlw	97	;'a'
   257  0018  3463               	retlw	99	;'c'
   258  0019  3474               	retlw	116	;'t'
   259  001A  3465               	retlw	101	;'e'
   260  001B  3472               	retlw	114	;'r'
   261  001C  3420               	retlw	32	;' '
   262  001D  3470               	retlw	112	;'p'
   263  001E  3461               	retlw	97	;'a'
   264  001F  3472               	retlw	114	;'r'
   265  0020  3461               	retlw	97	;'a'
   266  0021  3420               	retlw	32	;' '
   267  0022  3464               	retlw	100	;'d'
   268  0023  3465               	retlw	101	;'e'
   269  0024  3473               	retlw	115	;'s'
   270  0025  3470               	retlw	112	;'p'
   271  0026  346C               	retlw	108	;'l'
   272  0027  3465               	retlw	101	;'e'
   273  0028  3467               	retlw	103	;'g'
   274  0029  3461               	retlw	97	;'a'
   275  002A  3472               	retlw	114	;'r'
   276  002B  3420               	retlw	32	;' '
   277  002C  3465               	retlw	101	;'e'
   278  002D  346E               	retlw	110	;'n'
   279  002E  3420               	retlw	32	;' '
   280  002F  3450               	retlw	80	;'P'
   281  0030  344F               	retlw	79	;'O'
   282  0031  3452               	retlw	82	;'R'
   283  0032  3454               	retlw	84	;'T'
   284  0033  3441               	retlw	65	;'A'
   285  0034  343A               	retlw	58	;':'
   286  0035  3420               	retlw	32	;' '
   287  0036  340D               	retlw	13
   288  0037  3400               	retlw	0
   289  0038                     STR_7:
   290  0038  340D               	retlw	13
   291  0039  3420               	retlw	32	;' '
   292  003A  3449               	retlw	73	;'I'
   293  003B  346E               	retlw	110	;'n'
   294  003C  3473               	retlw	115	;'s'
   295  003D  3465               	retlw	101	;'e'
   296  003E  3472               	retlw	114	;'r'
   297  003F  3474               	retlw	116	;'t'
   298  0040  3461               	retlw	97	;'a'
   299  0041  3472               	retlw	114	;'r'
   300  0042  3420               	retlw	32	;' '
   301  0043  3463               	retlw	99	;'c'
   302  0044  3461               	retlw	97	;'a'
   303  0045  3472               	retlw	114	;'r'
   304  0046  3461               	retlw	97	;'a'
   305  0047  3463               	retlw	99	;'c'
   306  0048  3474               	retlw	116	;'t'
   307  0049  3465               	retlw	101	;'e'
   308  004A  3472               	retlw	114	;'r'
   309  004B  3420               	retlw	32	;' '
   310  004C  3470               	retlw	112	;'p'
   311  004D  3461               	retlw	97	;'a'
   312  004E  3472               	retlw	114	;'r'
   313  004F  3461               	retlw	97	;'a'
   314  0050  3420               	retlw	32	;' '
   315  0051  3464               	retlw	100	;'d'
   316  0052  3465               	retlw	101	;'e'
   317  0053  3473               	retlw	115	;'s'
   318  0054  3470               	retlw	112	;'p'
   319  0055  346C               	retlw	108	;'l'
   320  0056  3465               	retlw	101	;'e'
   321  0057  3467               	retlw	103	;'g'
   322  0058  3461               	retlw	97	;'a'
   323  0059  3472               	retlw	114	;'r'
   324  005A  3420               	retlw	32	;' '
   325  005B  3465               	retlw	101	;'e'
   326  005C  346E               	retlw	110	;'n'
   327  005D  3420               	retlw	32	;' '
   328  005E  3450               	retlw	80	;'P'
   329  005F  344F               	retlw	79	;'O'
   330  0060  3452               	retlw	82	;'R'
   331  0061  3454               	retlw	84	;'T'
   332  0062  3442               	retlw	66	;'B'
   333  0063  343A               	retlw	58	;':'
   334  0064  3420               	retlw	32	;' '
   335  0065  340D               	retlw	13
   336  0066  3400               	retlw	0
   337  0067                     STR_2:
   338  0067  3420               	retlw	32	;' '
   339  0068  3431               	retlw	49	;'1'
   340  0069  3420               	retlw	32	;' '
   341  006A  342D               	retlw	45	;'-'
   342  006B  3420               	retlw	32	;' '
   343  006C  3444               	retlw	68	;'D'
   344  006D  3465               	retlw	101	;'e'
   345  006E  3473               	retlw	115	;'s'
   346  006F  3470               	retlw	112	;'p'
   347  0070  346C               	retlw	108	;'l'
   348  0071  3465               	retlw	101	;'e'
   349  0072  3467               	retlw	103	;'g'
   350  0073  3461               	retlw	97	;'a'
   351  0074  3472               	retlw	114	;'r'
   352  0075  3420               	retlw	32	;' '
   353  0076  3463               	retlw	99	;'c'
   354  0077  3461               	retlw	97	;'a'
   355  0078  3464               	retlw	100	;'d'
   356  0079  3465               	retlw	101	;'e'
   357  007A  346E               	retlw	110	;'n'
   358  007B  3461               	retlw	97	;'a'
   359  007C  3420               	retlw	32	;' '
   360  007D  3464               	retlw	100	;'d'
   361  007E  3465               	retlw	101	;'e'
   362  007F  3420               	retlw	32	;' '
   363  0080  3463               	retlw	99	;'c'
   364  0081  3461               	retlw	97	;'a'
   365  0082  3472               	retlw	114	;'r'
   366  0083  3461               	retlw	97	;'a'
   367  0084  3463               	retlw	99	;'c'
   368  0085  3474               	retlw	116	;'t'
   369  0086  3465               	retlw	101	;'e'
   370  0087  3472               	retlw	114	;'r'
   371  0088  3465               	retlw	101	;'e'
   372  0089  3473               	retlw	115	;'s'
   373  008A  3420               	retlw	32	;' '
   374  008B  340D               	retlw	13
   375  008C  3400               	retlw	0
   376  008D                     STR_5:
   377  008D  340D               	retlw	13
   378  008E  3420               	retlw	32	;' '
   379  008F  3443               	retlw	67	;'C'
   380  0090  3461               	retlw	97	;'a'
   381  0091  3464               	retlw	100	;'d'
   382  0092  3465               	retlw	101	;'e'
   383  0093  346E               	retlw	110	;'n'
   384  0094  3461               	retlw	97	;'a'
   385  0095  3420               	retlw	32	;' '
   386  0096  3464               	retlw	100	;'d'
   387  0097  3465               	retlw	101	;'e'
   388  0098  3420               	retlw	32	;' '
   389  0099  3463               	retlw	99	;'c'
   390  009A  3461               	retlw	97	;'a'
   391  009B  3472               	retlw	114	;'r'
   392  009C  3461               	retlw	97	;'a'
   393  009D  3463               	retlw	99	;'c'
   394  009E  3474               	retlw	116	;'t'
   395  009F  3465               	retlw	101	;'e'
   396  00A0  3472               	retlw	114	;'r'
   397  00A1  3465               	retlw	101	;'e'
   398  00A2  3473               	retlw	115	;'s'
   399  00A3  3420               	retlw	32	;' '
   400  00A4  3463               	retlw	99	;'c'
   401  00A5  3461               	retlw	97	;'a'
   402  00A6  3472               	retlw	114	;'r'
   403  00A7  3467               	retlw	103	;'g'
   404  00A8  3461               	retlw	97	;'a'
   405  00A9  346E               	retlw	110	;'n'
   406  00AA  3464               	retlw	100	;'d'
   407  00AB  346F               	retlw	111	;'o'
   408  00AC  342E               	retlw	46	;'.'
   409  00AD  342E               	retlw	46	;'.'
   410  00AE  342E               	retlw	46	;'.'
   411  00AF  3420               	retlw	32	;' '
   412  00B0  340D               	retlw	13
   413  00B1  3400               	retlw	0
   414  00B2                     STR_3:
   415  00B2  3420               	retlw	32	;' '
   416  00B3  3432               	retlw	50	;'2'
   417  00B4  3420               	retlw	32	;' '
   418  00B5  342D               	retlw	45	;'-'
   419  00B6  3420               	retlw	32	;' '
   420  00B7  3444               	retlw	68	;'D'
   421  00B8  3465               	retlw	101	;'e'
   422  00B9  3473               	retlw	115	;'s'
   423  00BA  3470               	retlw	112	;'p'
   424  00BB  346C               	retlw	108	;'l'
   425  00BC  3465               	retlw	101	;'e'
   426  00BD  3467               	retlw	103	;'g'
   427  00BE  3461               	retlw	97	;'a'
   428  00BF  3472               	retlw	114	;'r'
   429  00C0  3420               	retlw	32	;' '
   430  00C1  3450               	retlw	80	;'P'
   431  00C2  344F               	retlw	79	;'O'
   432  00C3  3452               	retlw	82	;'R'
   433  00C4  3454               	retlw	84	;'T'
   434  00C5  3441               	retlw	65	;'A'
   435  00C6  3420               	retlw	32	;' '
   436  00C7  340D               	retlw	13
   437  00C8  3400               	retlw	0
   438  00C9                     STR_4:
   439  00C9  3420               	retlw	32	;' '
   440  00CA  3433               	retlw	51	;'3'
   441  00CB  3420               	retlw	32	;' '
   442  00CC  342D               	retlw	45	;'-'
   443  00CD  3420               	retlw	32	;' '
   444  00CE  3444               	retlw	68	;'D'
   445  00CF  3465               	retlw	101	;'e'
   446  00D0  3473               	retlw	115	;'s'
   447  00D1  3470               	retlw	112	;'p'
   448  00D2  346C               	retlw	108	;'l'
   449  00D3  3465               	retlw	101	;'e'
   450  00D4  3467               	retlw	103	;'g'
   451  00D5  3461               	retlw	97	;'a'
   452  00D6  3472               	retlw	114	;'r'
   453  00D7  3420               	retlw	32	;' '
   454  00D8  3450               	retlw	80	;'P'
   455  00D9  344F               	retlw	79	;'O'
   456  00DA  3452               	retlw	82	;'R'
   457  00DB  3454               	retlw	84	;'T'
   458  00DC  3442               	retlw	66	;'B'
   459  00DD  3420               	retlw	32	;' '
   460  00DE  340D               	retlw	13
   461  00DF  3400               	retlw	0
   462  00E0                     STR_1:
   463  00E0  340D               	retlw	13
   464  00E1  3420               	retlw	32	;' '
   465  00E2  3445               	retlw	69	;'E'
   466  00E3  346C               	retlw	108	;'l'
   467  00E4  3469               	retlw	105	;'i'
   468  00E5  346A               	retlw	106	;'j'
   469  00E6  3461               	retlw	97	;'a'
   470  00E7  3420               	retlw	32	;' '
   471  00E8  3475               	retlw	117	;'u'
   472  00E9  346E               	retlw	110	;'n'
   473  00EA  3461               	retlw	97	;'a'
   474  00EB  3420               	retlw	32	;' '
   475  00EC  346F               	retlw	111	;'o'
   476  00ED  3470               	retlw	112	;'p'
   477  00EE  3463               	retlw	99	;'c'
   478  00EF  3469               	retlw	105	;'i'
   479  00F0  346F               	retlw	111	;'o'
   480  00F1  346E               	retlw	110	;'n'
   481  00F2  343A               	retlw	58	;':'
   482  00F3  3420               	retlw	32	;' '
   483  00F4  340D               	retlw	13
   484  00F5  3400               	retlw	0
   485                           
   486                           	psect	cinit
   487  07FC                     start_initialization:	
   488                           ; #config settings
   489                           
   490  07FC                     __initialization:
   491  07FC                     end_of_initialization:	
   492                           ;End of C runtime variable initialization code
   493                           
   494  07FC                     __end_of__initialization:
   495  07FC  0183               	clrf	3
   496  07FD  120A  118A  2F0A   	ljmp	_main	;jump to C main() function
   497                           
   498                           	psect	cstackCOMMON
   499  0070                     __pcstackCOMMON:
   500  0070                     ?_setup:
   501  0070                     ??_setup:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_texto:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_main:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_putch:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ??_putch:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_printf:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     putch@data:	
   520                           ; 2 bytes @ 0x0
   521                           
   522                           
   523                           ; 1 bytes @ 0x0
   524  0070                     	ds	1
   525  0071                     ??_printf:
   526                           
   527                           ; 1 bytes @ 0x1
   528  0071                     	ds	1
   529  0072                     printf@ap:
   530                           
   531                           ; 1 bytes @ 0x2
   532  0072                     	ds	1
   533  0073                     printf@c:
   534                           
   535                           ; 1 bytes @ 0x3
   536  0073                     	ds	1
   537  0074                     printf@f:
   538                           
   539                           ; 1 bytes @ 0x4
   540  0074                     	ds	1
   541  0075                     ??_texto:
   542                           
   543                           ; 1 bytes @ 0x5
   544  0075                     	ds	3
   545  0078                     ??_main:
   546                           
   547                           	psect	maintext
   548  070A                     __pmaintext:	
   549                           ; 1 bytes @ 0x8
   550 ;;
   551 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   552 ;;
   553 ;; *************** function _main *****************
   554 ;; Defined at:
   555 ;;		line 40 in file "Parte2.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : B00/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   569 ;;      Params:         0       0       0       0       0
   570 ;;      Locals:         0       0       0       0       0
   571 ;;      Temps:          0       0       0       0       0
   572 ;;      Totals:         0       0       0       0       0
   573 ;;Total ram usage:        0 bytes
   574 ;; Hardware stack levels required when called:    3
   575 ;; This function calls:
   576 ;;		_setup
   577 ;;		_texto
   578 ;; This function is called by:
   579 ;;		Startup code after reset
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           
   584                           ;psect for function _main
   585  070A                     _main:
   586  070A                     l797:	
   587                           ;incstack = 0
   588                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   589                           
   590                           
   591                           ;Parte2.c: 42:     setup();
   592  070A  120A  118A  2737  120A  118A  	fcall	_setup
   593  070F                     l799:
   594                           
   595                           ;Parte2.c: 46:     {;Parte2.c: 47:     texto();
   596  070F  120A  118A  2766  120A  118A  	fcall	_texto
   597  0714  2F0F               	goto	l799
   598  0715  120A  118A  2800   	ljmp	start
   599  0718                     __end_of_main:
   600                           
   601                           	psect	text1
   602  0766                     __ptext1:	
   603 ;; *************** function _texto *****************
   604 ;; Defined at:
   605 ;;		line 60 in file "Parte2.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0
   621 ;;      Temps:          3       0       0       0       0
   622 ;;      Totals:         3       0       0       0       0
   623 ;;Total ram usage:        3 bytes
   624 ;; Hardware stack levels used:    1
   625 ;; Hardware stack levels required when called:    2
   626 ;; This function calls:
   627 ;;		_printf
   628 ;; This function is called by:
   629 ;;		_main
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           
   634                           ;psect for function _texto
   635  0766                     _texto:
   636  0766                     l767:	
   637                           ;incstack = 0
   638                           ; Regs used in _texto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   639                           
   640                           
   641                           ;Parte2.c: 61:     _delay((unsigned long)((250)*(8000000/4000.0)));
   642  0766  3003               	movlw	3
   643  0767  00F7               	movwf	??_texto+2
   644  0768  308A               	movlw	138
   645  0769  00F6               	movwf	??_texto+1
   646  076A  3055               	movlw	85
   647  076B  00F5               	movwf	??_texto
   648  076C                     u167:
   649  076C  0BF5               	decfsz	??_texto,f
   650  076D  2F6C               	goto	u167
   651  076E  0BF6               	decfsz	??_texto+1,f
   652  076F  2F6C               	goto	u167
   653  0770  0BF7               	decfsz	??_texto+2,f
   654  0771  2F6C               	goto	u167
   655  0772  2F73               	nop2
   656  0773                     l769:
   657                           
   658                           ;Parte2.c: 62:     printf("\r Elija una opcion: \r");
   659  0773  30D8               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   660  0774  120A  118A  2718  120A  118A  	fcall	_printf
   661  0779                     l771:
   662                           
   663                           ;Parte2.c: 63:     _delay((unsigned long)((250)*(8000000/4000.0)));
   664  0779  3003               	movlw	3
   665  077A  00F7               	movwf	??_texto+2
   666  077B  308A               	movlw	138
   667  077C  00F6               	movwf	??_texto+1
   668  077D  3055               	movlw	85
   669  077E  00F5               	movwf	??_texto
   670  077F                     u177:
   671  077F  0BF5               	decfsz	??_texto,f
   672  0780  2F7F               	goto	u177
   673  0781  0BF6               	decfsz	??_texto+1,f
   674  0782  2F7F               	goto	u177
   675  0783  0BF7               	decfsz	??_texto+2,f
   676  0784  2F7F               	goto	u177
   677  0785  2F86               	nop2
   678                           
   679                           ;Parte2.c: 64:     printf(" 1 - Desplegar cadena de caracteres \r");
   680  0786  305F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   681  0787  120A  118A  2718  120A  118A  	fcall	_printf
   682  078C                     l773:
   683                           
   684                           ;Parte2.c: 65:     _delay((unsigned long)((250)*(8000000/4000.0)));
   685  078C  3003               	movlw	3
   686  078D  00F7               	movwf	??_texto+2
   687  078E  308A               	movlw	138
   688  078F  00F6               	movwf	??_texto+1
   689  0790  3055               	movlw	85
   690  0791  00F5               	movwf	??_texto
   691  0792                     u187:
   692  0792  0BF5               	decfsz	??_texto,f
   693  0793  2F92               	goto	u187
   694  0794  0BF6               	decfsz	??_texto+1,f
   695  0795  2F92               	goto	u187
   696  0796  0BF7               	decfsz	??_texto+2,f
   697  0797  2F92               	goto	u187
   698  0798  2F99               	nop2
   699  0799                     l775:
   700                           
   701                           ;Parte2.c: 66:     printf(" 2 - Desplegar PORTA \r");
   702  0799  30AA               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   703  079A  120A  118A  2718  120A  118A  	fcall	_printf
   704                           
   705                           ;Parte2.c: 67:     _delay((unsigned long)((250)*(8000000/4000.0)));
   706  079F  3003               	movlw	3
   707  07A0  00F7               	movwf	??_texto+2
   708  07A1  308A               	movlw	138
   709  07A2  00F6               	movwf	??_texto+1
   710  07A3  3055               	movlw	85
   711  07A4  00F5               	movwf	??_texto
   712  07A5                     u197:
   713  07A5  0BF5               	decfsz	??_texto,f
   714  07A6  2FA5               	goto	u197
   715  07A7  0BF6               	decfsz	??_texto+1,f
   716  07A8  2FA5               	goto	u197
   717  07A9  0BF7               	decfsz	??_texto+2,f
   718  07AA  2FA5               	goto	u197
   719  07AB  2FAC               	nop2
   720  07AC                     l777:
   721                           
   722                           ;Parte2.c: 68:     printf(" 3 - Desplegar PORTB \r");
   723  07AC  30C1               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   724  07AD  120A  118A  2718  120A  118A  	fcall	_printf
   725  07B2                     l63:	
   726                           ;Parte2.c: 69:     while (RCIF == 0);
   727                           
   728  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   729  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   730  07B4  1E8C               	btfss	12,5	;volatile
   731  07B5  2FB7               	goto	u101
   732  07B6  2FB8               	goto	u100
   733  07B7                     u101:
   734  07B7  2FB2               	goto	l63
   735  07B8                     u100:
   736  07B8                     l779:
   737                           
   738                           ;Parte2.c: 71:     if (RCREG == '1'){
   739  07B8  3031               	movlw	49
   740  07B9  061A               	xorwf	26,w	;volatile
   741  07BA  1D03               	btfss	3,2
   742  07BB  2FBD               	goto	u111
   743  07BC  2FBE               	goto	u110
   744  07BD                     u111:
   745  07BD  2FD1               	goto	l785
   746  07BE                     u110:
   747  07BE                     l781:
   748                           
   749                           ;Parte2.c: 72:         _delay((unsigned long)((500)*(8000000/4000.0)));
   750  07BE  3006               	movlw	6
   751  07BF  00F7               	movwf	??_texto+2
   752  07C0  3013               	movlw	19
   753  07C1  00F6               	movwf	??_texto+1
   754  07C2  30AD               	movlw	173
   755  07C3  00F5               	movwf	??_texto
   756  07C4                     u207:
   757  07C4  0BF5               	decfsz	??_texto,f
   758  07C5  2FC4               	goto	u207
   759  07C6  0BF6               	decfsz	??_texto+1,f
   760  07C7  2FC4               	goto	u207
   761  07C8  0BF7               	decfsz	??_texto+2,f
   762  07C9  2FC4               	goto	u207
   763  07CA  2FCB               	nop2
   764  07CB                     l783:
   765                           
   766                           ;Parte2.c: 73:         printf("\r Cadena de caracteres cargando... \r");
   767  07CB  3085               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   768  07CC  120A  118A  2718  120A  118A  	fcall	_printf
   769  07D1                     l785:
   770                           
   771                           ;Parte2.c: 75:     if (RCREG == '2'){
   772  07D1  3032               	movlw	50
   773  07D2  1283               	bcf	3,5	;RP0=0, select bank0
   774  07D3  1303               	bcf	3,6	;RP1=0, select bank0
   775  07D4  061A               	xorwf	26,w	;volatile
   776  07D5  1D03               	btfss	3,2
   777  07D6  2FD8               	goto	u121
   778  07D7  2FD9               	goto	u120
   779  07D8                     u121:
   780  07D8  2FE7               	goto	l791
   781  07D9                     u120:
   782  07D9                     l787:
   783                           
   784                           ;Parte2.c: 76:         printf("\r Insertar caracter para desplegar en PORTA: \r");
   785  07D9  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   786  07DA  120A  118A  2718  120A  118A  	fcall	_printf
   787  07DF                     l68:	
   788                           ;Parte2.c: 77:         while (RCIF == 0);
   789                           
   790  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   791  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   792  07E1  1E8C               	btfss	12,5	;volatile
   793  07E2  2FE4               	goto	u131
   794  07E3  2FE5               	goto	u130
   795  07E4                     u131:
   796  07E4  2FDF               	goto	l68
   797  07E5                     u130:
   798  07E5                     l789:
   799                           
   800                           ;Parte2.c: 78:         PORTA = RCREG;
   801  07E5  081A               	movf	26,w	;volatile
   802  07E6  0085               	movwf	5	;volatile
   803  07E7                     l791:
   804                           
   805                           ;Parte2.c: 80:     if (RCREG == '3'){
   806  07E7  3033               	movlw	51
   807  07E8  061A               	xorwf	26,w	;volatile
   808  07E9  1D03               	btfss	3,2
   809  07EA  2FEC               	goto	u141
   810  07EB  2FED               	goto	u140
   811  07EC                     u141:
   812  07EC  2FFB               	goto	l76
   813  07ED                     u140:
   814  07ED                     l793:
   815                           
   816                           ;Parte2.c: 81:         printf("\r Insertar caracter para desplegar en PORTB: \r");
   817  07ED  3030               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   818  07EE  120A  118A  2718  120A  118A  	fcall	_printf
   819  07F3                     l72:	
   820                           ;Parte2.c: 82:         while (RCIF == 0);
   821                           
   822  07F3  1283               	bcf	3,5	;RP0=0, select bank0
   823  07F4  1303               	bcf	3,6	;RP1=0, select bank0
   824  07F5  1E8C               	btfss	12,5	;volatile
   825  07F6  2FF8               	goto	u151
   826  07F7  2FF9               	goto	u150
   827  07F8                     u151:
   828  07F8  2FF3               	goto	l72
   829  07F9                     u150:
   830  07F9                     l795:
   831                           
   832                           ;Parte2.c: 83:         PORTB = RCREG;
   833  07F9  081A               	movf	26,w	;volatile
   834  07FA  0086               	movwf	6	;volatile
   835  07FB                     l76:	
   836                           ;Parte2.c: 84:     }
   837                           
   838  07FB  0008               	return
   839  07FC                     __end_of_texto:
   840                           
   841                           	psect	text2
   842  0718                     __ptext2:	
   843 ;; *************** function _printf *****************
   844 ;; Defined at:
   845 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  f               1    wreg     PTR const unsigned char 
   848 ;;		 -> STR_7(47), STR_6(47), STR_5(37), STR_4(23), 
   849 ;;		 -> STR_3(23), STR_2(38), STR_1(22), 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  f               1    4[COMMON] PTR const unsigned char 
   852 ;;		 -> STR_7(47), STR_6(47), STR_5(37), STR_4(23), 
   853 ;;		 -> STR_3(23), STR_2(38), STR_1(22), 
   854 ;;  tmpval          4    0        struct .
   855 ;;  cp              2    0        PTR const unsigned char 
   856 ;;  len             2    0        unsigned int 
   857 ;;  val             2    0        unsigned int 
   858 ;;  c               1    3[COMMON] unsigned char 
   859 ;;  ap              1    2[COMMON] PTR void [1]
   860 ;;		 -> ?_printf(2), 
   861 ;;  flag            1    0        unsigned char 
   862 ;;  prec            1    0        char 
   863 ;; Return value:  Size  Location     Type
   864 ;;                  2   12[None  ] int 
   865 ;; Registers used:
   866 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   872 ;;      Params:         0       0       0       0       0
   873 ;;      Locals:         3       0       0       0       0
   874 ;;      Temps:          1       0       0       0       0
   875 ;;      Totals:         4       0       0       0       0
   876 ;;Total ram usage:        4 bytes
   877 ;; Hardware stack levels used:    1
   878 ;; Hardware stack levels required when called:    1
   879 ;; This function calls:
   880 ;;		_putch
   881 ;; This function is called by:
   882 ;;		_texto
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           
   887                           ;psect for function _printf
   888  0718                     _printf:
   889                           
   890                           ;incstack = 0
   891                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   892                           ;printf@f stored from wreg
   893  0718  00F4               	movwf	printf@f
   894  0719                     l761:
   895                           
   896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
   897  0719  3070               	movlw	(low (?_printf| 0))& (0+255)
   898  071A  00F1               	movwf	??_printf
   899  071B  0871               	movf	??_printf,w
   900  071C  00F2               	movwf	printf@ap
   901                           
   902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   903  071D  2F24               	goto	l765
   904  071E                     l763:
   905                           
   906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
   907  071E  0873               	movf	printf@c,w
   908  071F  120A  118A  2700  120A  118A  	fcall	_putch
   909  0724                     l765:	
   910                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   911                           
   912                           
   913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   914  0724  3001               	movlw	1
   915  0725  07F4               	addwf	printf@f,f
   916  0726  30FF               	movlw	-1
   917  0727  0774               	addwf	printf@f,w
   918  0728  0084               	movwf	4
   919  0729  120A  118A  2003  120A  118A  	fcall	stringdir
   920  072E  00F1               	movwf	??_printf
   921  072F  0871               	movf	??_printf,w
   922  0730  00F3               	movwf	printf@c
   923  0731  0873               	movf	printf@c,w
   924  0732  1D03               	btfss	3,2
   925  0733  2F35               	goto	u91
   926  0734  2F36               	goto	u90
   927  0735                     u91:
   928  0735  2F1E               	goto	l763
   929  0736                     u90:
   930  0736                     l171:
   931  0736  0008               	return
   932  0737                     __end_of_printf:
   933                           
   934                           	psect	text3
   935  0700                     __ptext3:	
   936 ;; *************** function _putch *****************
   937 ;; Defined at:
   938 ;;		line 54 in file "Parte2.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  data            1    wreg     unsigned char 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  data            1    0[COMMON] unsigned char 
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         0       0       0       0       0
   953 ;;      Locals:         1       0       0       0       0
   954 ;;      Temps:          0       0       0       0       0
   955 ;;      Totals:         1       0       0       0       0
   956 ;;Total ram usage:        1 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_printf
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           
   966                           ;psect for function _putch
   967  0700                     _putch:
   968                           
   969                           ;incstack = 0
   970                           ; Regs used in _putch: [wreg]
   971                           ;putch@data stored from wreg
   972  0700  00F0               	movwf	putch@data
   973  0701                     l681:
   974  0701                     l57:	
   975                           ;Parte2.c: 55:     while(TXIF == 0);
   976                           
   977  0701  1283               	bcf	3,5	;RP0=0, select bank0
   978  0702  1303               	bcf	3,6	;RP1=0, select bank0
   979  0703  1E0C               	btfss	12,4	;volatile
   980  0704  2F06               	goto	u11
   981  0705  2F07               	goto	u10
   982  0706                     u11:
   983  0706  2F01               	goto	l57
   984  0707                     u10:
   985  0707                     l683:
   986                           
   987                           ;Parte2.c: 56:     TXREG = data;
   988  0707  0870               	movf	putch@data,w
   989  0708  0099               	movwf	25	;volatile
   990  0709                     l60:
   991  0709  0008               	return
   992  070A                     __end_of_putch:
   993                           
   994                           	psect	text4
   995  0737                     __ptext4:	
   996 ;; *************** function _setup *****************
   997 ;; Defined at:
   998 ;;		line 91 in file "Parte2.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1012 ;;      Params:         0       0       0       0       0
  1013 ;;      Locals:         0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0
  1015 ;;      Totals:         0       0       0       0       0
  1016 ;;Total ram usage:        0 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           
  1026                           ;psect for function _setup
  1027  0737                     _setup:
  1028  0737                     l693:	
  1029                           ;incstack = 0
  1030                           ; Regs used in _setup: [wreg+status,2]
  1031                           
  1032                           
  1033                           ;Parte2.c: 93:     OSCCONbits.IRCF2 = 1;
  1034  0737  1683               	bsf	3,5	;RP0=1, select bank1
  1035  0738  1303               	bcf	3,6	;RP1=0, select bank1
  1036  0739  170F               	bsf	15,6	;volatile
  1037                           
  1038                           ;Parte2.c: 94:     OSCCONbits.IRCF1 = 1;
  1039  073A  168F               	bsf	15,5	;volatile
  1040                           
  1041                           ;Parte2.c: 95:     OSCCONbits.IRCF0 = 1;
  1042  073B  160F               	bsf	15,4	;volatile
  1043                           
  1044                           ;Parte2.c: 96:     OSCCONbits.SCS = 1;
  1045  073C  140F               	bsf	15,0	;volatile
  1046  073D                     l695:
  1047                           
  1048                           ;Parte2.c: 99:     ANSEL = 0;
  1049  073D  1683               	bsf	3,5	;RP0=1, select bank3
  1050  073E  1703               	bsf	3,6	;RP1=1, select bank3
  1051  073F  0188               	clrf	8	;volatile
  1052                           
  1053                           ;Parte2.c: 100:     ANSELH = 0;
  1054  0740  0189               	clrf	9	;volatile
  1055                           
  1056                           ;Parte2.c: 103:     TRISA = 0x0;
  1057  0741  1683               	bsf	3,5	;RP0=1, select bank1
  1058  0742  1303               	bcf	3,6	;RP1=0, select bank1
  1059  0743  0185               	clrf	5	;volatile
  1060                           
  1061                           ;Parte2.c: 104:     TRISB = 0x0;
  1062  0744  0186               	clrf	6	;volatile
  1063                           
  1064                           ;Parte2.c: 107:     PORTA = 0x00;
  1065  0745  1283               	bcf	3,5	;RP0=0, select bank0
  1066  0746  1303               	bcf	3,6	;RP1=0, select bank0
  1067  0747  0185               	clrf	5	;volatile
  1068                           
  1069                           ;Parte2.c: 108:     PORTB = 0x00;
  1070  0748  0186               	clrf	6	;volatile
  1071  0749                     l697:
  1072                           
  1073                           ;Parte2.c: 111:     INTCONbits.GIE = 1;
  1074  0749  178B               	bsf	11,7	;volatile
  1075  074A                     l699:
  1076                           
  1077                           ;Parte2.c: 112:     INTCONbits.PEIE = 1;
  1078  074A  170B               	bsf	11,6	;volatile
  1079  074B                     l701:
  1080                           
  1081                           ;Parte2.c: 113:     PIE1bits.RCIE = 1;
  1082  074B  1683               	bsf	3,5	;RP0=1, select bank1
  1083  074C  1303               	bcf	3,6	;RP1=0, select bank1
  1084  074D  168C               	bsf	12,5	;volatile
  1085  074E                     l703:
  1086                           
  1087                           ;Parte2.c: 114:     PIE1bits.TXIE = 1;
  1088  074E  160C               	bsf	12,4	;volatile
  1089  074F                     l705:
  1090                           
  1091                           ;Parte2.c: 117:     TXSTAbits.SYNC = 0;
  1092  074F  1218               	bcf	24,4	;volatile
  1093  0750                     l707:
  1094                           
  1095                           ;Parte2.c: 118:     TXSTAbits.BRGH = 1;
  1096  0750  1518               	bsf	24,2	;volatile
  1097  0751                     l709:
  1098                           
  1099                           ;Parte2.c: 119:     BAUDCTLbits.BRG16 = 1;
  1100  0751  1683               	bsf	3,5	;RP0=1, select bank3
  1101  0752  1703               	bsf	3,6	;RP1=1, select bank3
  1102  0753  1587               	bsf	7,3	;volatile
  1103  0754                     l711:
  1104                           
  1105                           ;Parte2.c: 121:     SPBRG = 208;
  1106  0754  30D0               	movlw	208
  1107  0755  1683               	bsf	3,5	;RP0=1, select bank1
  1108  0756  1303               	bcf	3,6	;RP1=0, select bank1
  1109  0757  0099               	movwf	25	;volatile
  1110  0758                     l713:
  1111                           
  1112                           ;Parte2.c: 122:     SPBRGH = 0;
  1113  0758  019A               	clrf	26	;volatile
  1114  0759                     l715:
  1115                           
  1116                           ;Parte2.c: 124:     RCSTAbits.SPEN = 1;
  1117  0759  1283               	bcf	3,5	;RP0=0, select bank0
  1118  075A  1303               	bcf	3,6	;RP1=0, select bank0
  1119  075B  1798               	bsf	24,7	;volatile
  1120  075C                     l717:
  1121                           
  1122                           ;Parte2.c: 125:     RCSTAbits.RX9 = 0;
  1123  075C  1318               	bcf	24,6	;volatile
  1124  075D                     l719:
  1125                           
  1126                           ;Parte2.c: 126:     RCSTAbits.CREN = 1;
  1127  075D  1618               	bsf	24,4	;volatile
  1128  075E                     l721:
  1129                           
  1130                           ;Parte2.c: 128:     TXSTAbits.TXEN = 1;
  1131  075E  1683               	bsf	3,5	;RP0=1, select bank1
  1132  075F  1303               	bcf	3,6	;RP1=0, select bank1
  1133  0760  1698               	bsf	24,5	;volatile
  1134  0761                     l723:
  1135                           
  1136                           ;Parte2.c: 130:     PIR1bits.RCIF = 0;
  1137  0761  1283               	bcf	3,5	;RP0=0, select bank0
  1138  0762  1303               	bcf	3,6	;RP1=0, select bank0
  1139  0763  128C               	bcf	12,5	;volatile
  1140  0764                     l725:
  1141                           
  1142                           ;Parte2.c: 131:     PIR1bits.TXIF = 0;
  1143  0764  120C               	bcf	12,4	;volatile
  1144  0765                     l79:
  1145  0765  0008               	return
  1146  0766                     __end_of_setup:
  1147  007E                     btemp	set	126	;btemp
  1148  007E                     wtemp0	set	126
  1149                           
  1150                           	psect	config
  1151                           
  1152                           ;Config register CONFIG1 @ 0x2007
  1153                           ;	Oscillator Selection bits
  1154                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1155                           ;	Watchdog Timer Enable bit
  1156                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1157                           ;	Power-up Timer Enable bit
  1158                           ;	PWRTE = OFF, PWRT disabled
  1159                           ;	RE3/MCLR pin function select bit
  1160                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1161                           ;	Code Protection bit
  1162                           ;	CP = OFF, Program memory code protection is disabled
  1163                           ;	Data Code Protection bit
  1164                           ;	CPD = OFF, Data memory code protection is disabled
  1165                           ;	Brown Out Reset Selection bits
  1166                           ;	BOREN = OFF, BOR disabled
  1167                           ;	Internal External Switchover bit
  1168                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1169                           ;	Fail-Safe Clock Monitor Enabled bit
  1170                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1171                           ;	Low Voltage Programming Enable bit
  1172                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1173                           ;	In-Circuit Debugger Mode bit
  1174                           ;	DEBUG = 0x1, unprogrammed default
  1175  2007                     	org	8199
  1176  2007  20D4               	dw	8404
  1177                           
  1178                           ;Config register CONFIG2 @ 0x2008
  1179                           ;	Brown-out Reset Selection bit
  1180                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1181                           ;	Flash Program Memory Self Write Enable bits
  1182                           ;	WRT = OFF, Write protection off
  1183  2008                     	org	8200
  1184  2008  3FFF               	dw	16383

Data Sizes:
    Strings     237
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 47
		 -> STR_7(CODE[47]), STR_6(CODE[47]), STR_5(CODE[37]), STR_4(CODE[23]), 
		 -> STR_3(CODE[23]), STR_2(CODE[38]), STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_texto
    _texto->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     292
                              _setup
                              _texto
 ---------------------------------------------------------------------------------
 (1) _texto                                                3     3      0     292
                                              5 COMMON     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              16    16      0     292
                                              1 COMMON     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _texto
     _printf
       _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun May 09 19:36:21 2021

                      pc 0002                       l60 0709                       l63 07B2  
                     l72 07F3                       l57 0701                       l76 07FB  
                     l68 07DF                       l79 0765                       u10 0707  
                     u11 0706                       u90 0736                       u91 0735  
                     fsr 0004                      l171 0736                      l701 074B  
                    l711 0754                      l703 074E                      l721 075E  
                    l713 0758                      l705 074F                      l723 0761  
                    l715 0759                      l707 0750                      l725 0764  
                    l717 075C                      l709 0751                      l719 075D  
                    l681 0701                      l761 0719                      l683 0707  
                    l763 071E                      l771 0779                      l693 0737  
                    l765 0724                      l781 07BE                      l773 078C  
                    l695 073D                      l791 07E7                      l783 07CB  
                    l775 0799                      l767 0766                      l697 0749  
                    l793 07ED                      l785 07D1                      l777 07AC  
                    l769 0773                      l699 074A                      l795 07F9  
                    l787 07D9                      l779 07B8                      l789 07E5  
                    l797 070A                      l799 070F                      u100 07B8  
                    u101 07B7                      u110 07BE                      u111 07BD  
                    u120 07D9                      u121 07D8                      u130 07E5  
                    u131 07E4                      u140 07ED                      u141 07EC  
                    u150 07F9                      u151 07F8                      u207 07C4  
                    u167 076C                      u177 077F                      u187 0792  
                    u197 07A5                      fsr0 0004                     STR_1 00E0  
                   STR_2 0067                     STR_3 00B2                     STR_4 00C9  
                   STR_5 008D                     STR_6 0009                     STR_7 0038  
                   _RCIF 0065                     _TXIF 0064                     _main 070A  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    _TXREG 0019                    _setup 0737  
                  _texto 0766                    _putch 0700                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 0718                   ??_main 0078                   ?_setup 0070  
                 ?_texto 0070                   ?_putch 0070                   _ANSELH 0189  
                 _SPBRGH 009A                   _printf 0718  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 0766            __end_of_texto 07FC  
          __end_of_putch 070A                  ??_setup 0070                  ??_texto 0075  
                ??_putch 0070               __pmaintext 070A                  ?_printf 0070  
             __stringtab 0003                  __ptext1 0766                  __ptext2 0718  
                __ptext3 0700                  __ptext4 0737          __size_of_printf 001F  
   end_of_initialization 07FC                _RCSTAbits 0018                  printf@c 0073  
                printf@f 0074                _TXSTAbits 0098              _BAUDCTLbits 0187  
         __end_of_printf 0737      start_initialization 07FC                 ??_printf 0071  
              ___latbits 0002                __pstrings 0003           __size_of_setup 002F  
         __size_of_texto 0096           __size_of_putch 000A                 _PIE1bits 008C  
               _PIR1bits 000C              __stringbase 0008       __end_of__stringtab 0009  
          __size_of_main 000E                putch@data 0070               _INTCONbits 000B  
              stringcode 0003               _OSCCONbits 008F                 printf@ap 0072  
               stringdir 0003                 stringtab 0003  
